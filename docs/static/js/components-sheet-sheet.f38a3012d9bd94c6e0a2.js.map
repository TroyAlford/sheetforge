{"version":3,"sources":["webpack://sheetforge/./source/models/types/between.js","webpack://sheetforge/./source/models/Layout/Layout.js","webpack://sheetforge/./source/components/index.js","webpack://sheetforge/./source/components/Conditions/Conditions.js","webpack://sheetforge/./source/components/Layout/Layout.js","webpack://sheetforge/./source/models/index.js","webpack://sheetforge/./source/components/Sheet/Sheet.js","webpack://sheetforge/./source/components/Sheet/Sheet.mdx"],"names":["between","min","max","defaultTo","arguments","length","undefined","mobx_state_tree","optional","refinement","types","number","n","Layout","compose","IIdentity","IEditable","model","children","CollectionOf","late","Layout_Layout","colSpan","columns","filter","string","sortOption","title","type","named","models_Layout_Layout","source_components","Attribute","Descriptor","Effect","Health","HealthBar","Item","Resource","Skill","Spell","Trait","observer","_temp","_class","_Component","Conditions","_getPrototypeOf2","_this","classCallCheck_default","this","_len","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","availableConditions","props","conditions","asArray","JSON","CACHE","forceUpdate","condition","value","delete","isCurrent","react_default","a","createElement","key","className","Editable","onChange","handleCheckbox","inherits_default","createClass_default","onSnapshotDisposer","onSnapshot","handleSnapshot","Expandable","map","renderCondition","react","React","noop","set","_this2","snapshot","snapshotJSON","_this$props","parentColumns","_this$props$model","style","width","Fragment","ref","titleBar","handleChangeTitle","placeholder","expandByDefault","omitItemWrapper","toggleButtonParent","current","Component","models","Attribute_Attribute","Descriptor_Descriptor","Effect_Effect","HealthLevel","Item_Item","Resource_Resource","Skill_Skill","Spell_Spell","components_Sheet_Sheet","Sheet","size","window","matches","state","setState","parent","typename","toLowerCase","List","ListOf","components","collection","character","extends_default","layout","Layout_Layout_Layout","hash","child","i","renderComponent","onCharacterSnapshotDisposer","toJSON","onLayoutSnapshotDisposer","handleWindowResize","onMount","components_Conditions_Conditions","bind","__webpack_exports__","_ref","objectWithoutProperties_default","dist","name","id","create","Character","localStorage","setItem","stringify","self","saved","getItem","example","parse"],"mappings":"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","file":"static/js/components-sheet-sheet.3dd0bd0c.js","sourcesContent":["import { types } from 'mobx-state-tree'\n\nexport default (min, max, defaultTo = min) => (\n  types.optional(\n    types.refinement(\n      types.number,\n      n => n === undefined || (n >= min && n <= max)\n    ),\n    defaultTo\n  )\n)\n","import { types } from 'mobx-state-tree'\nimport CollectionOf from '@/models/generic/Collection'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport between from '@/models/types/between'\n\nconst Layout = types.compose(\n  IIdentity,\n  IEditable,\n  types.model({\n    children: CollectionOf(types.late(() => Layout)),\n    colSpan: between(1, 4, 1),\n    columns: between(1, 4, 1),\n    filter: types.maybe(types.string),\n    sortOption: types.maybe(types.number),\n    title: types.union(types.maybe(types.string), types.literal(false)),\n    type: types.maybe(types.string),\n  })\n).named('Layout')\n\nexport default Layout\n\n// RULES\n// - Anything INSIDE a section that is NOT a section is 100% width\n// - A section which has a colSpan passes it down as `columns` to its children\n// - A section with a `list` property assumes component/model name match\n\n// [\n//   { type: 'Section', title: 'Descriptors', children: [\n//     { type: 'Descriptor', list: true, path: 'descriptors' },\n//   ] },\n//   { type: 'Section', title: 'Attributes', children: [\n//     { type: 'Attribute', list: true, path: 'attributes' },\n//     { type: 'HealthBar', path: 'health' },\n//   ] },\n//   { type: 'Row', children: [\n//     { type: 'Column', flex: 1, children: [\n//       { type: 'Section', title: 'Traits', children: [\n//         { type: 'Trait', list: true, path: 'traits' },\n//       ] },\n//       { type: 'Section', title: 'Resources', children: [\n//         { type: 'Resource', list: true, path: 'resources' },\n//       ] },\n//     ] },\n//     { type: 'Column', flex: 2, title: 'Skills', children: [\n//       { type: 'Section', title: 'Skills', children: [\n//         { type: 'Skill', list: true, path: 'skills' },\n//       ] },\n//       { type: 'Section', title: 'Inventory', children: [\n//         { type: 'Item', list: true, path: 'items' },\n//       ] },\n//       { type: 'Section', title: 'Spellbook', children: [\n//         { type: 'Spell', list: true, path: 'spells' },\n//       ] }\n//     ] },\n//   ] }\n// ]\n","import Attribute from '@/components/Attribute'\nimport Descriptor from '@/components/Descriptor'\nimport Effect from '@/components/Effect'\nimport Health from '@/components/HealthBar'\nimport Item from '@/components/Item'\nimport Resource from '@/components/Resource'\nimport Skill from '@/components/Skill'\nimport Spell from '@/components/Spell'\nimport Trait from '@/components/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  Health,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport './Conditions.scss'\n\nexport default observer(class Conditions extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  CACHE = {}\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, this.handleSnapshot)\n  }\n\n  componentWillUnmount() {\n    this.onSnapshotDisposer()\n  }\n\n  handleSnapshot = () => {\n    const availableConditions = this.props.model.availableConditions()\n    const conditions = this.props.model.conditions.asArray\n\n    if (\n      JSON.stringify(availableConditions) !== JSON.stringify(this.CACHE.availableConditions) ||\n      JSON.stringify(conditions) !== JSON.stringify(this.CACHE.conditions)\n    ) {\n      this.CACHE.availableConditions = availableConditions\n      this.CACHE.conditions = conditions\n      this.forceUpdate()\n    }\n  }\n\n  handleCheckbox = (condition, value) => {\n    const { conditions } = this.props.model\n\n    if (value && !conditions.includes(condition)) {\n      conditions.push(condition)\n    } else if (typeof conditions.delete === 'function') {\n      conditions.delete(condition)\n    } else {\n      conditions.splice(conditions.indexOf(condition), 1)\n    }\n    this.forceUpdate()\n  }\n\n  renderCondition = (condition) => {\n    const { conditions } = this.props.model\n    const isCurrent = conditions.includes(condition)\n    return (\n      <div key={condition} className={`condition ${isCurrent ? 'current' : 'available'}`}>\n        <Editable\n          className=\"current\"\n          onChange={value => this.handleCheckbox(condition, value)}\n          value={isCurrent}\n        />\n        <div className=\"name\">{condition}</div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"conditions\">\n        <Expandable>\n          {this.props.model.availableConditions().map(this.renderCondition)}\n        </Expandable>\n      </div>\n    )\n  }\n})\n","import { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport noop from '@/utilities/noop'\nimport './Layout.scss'\n\nexport default class Layout extends Component {\n  titleBar = React.createRef()\n\n  onSnapshotDisposer = noop\n  snapshot = null\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, (snapshot) => {\n      const snapshotJSON = JSON.stringify(snapshot)\n      if (this.snapshot !== snapshotJSON) {\n        this.snapshot = snapshotJSON\n        this.forceUpdate()\n      }\n    })\n    this.forceUpdate() // Immediate redraw to place buttonParent\n  }\n  componentWillUnmount() { this.onSnapshotDisposer() }\n\n  handleChangeTitle = title => this.props.model.set({ title })\n\n  render() {\n    const { children, parentColumns } = this.props\n    const { colSpan, title } = this.props.model\n\n    return (\n      <div className=\"layout\" style={{ width: `calc(100%/${parentColumns}*${colSpan})` }}>\n        {title === undefined\n          ? children\n          : <>\n            <div className=\"title-bar\" ref={this.titleBar}>\n              <Editable\n                className=\"title\"\n                onChange={this.handleChangeTitle}\n                placeholder=\"Section Title\"\n                value={title}\n              />\n            </div>\n            <Expandable\n              expandByDefault\n              omitItemWrapper\n              toggleButtonParent={this.titleBar.current}\n            >\n              {children}\n            </Expandable>\n          </>\n        }\n      </div>\n    )\n  }\n}\n","import Attribute from '@/models/Attribute'\nimport Descriptor from '@/models/Descriptor'\nimport Effect from '@/models/Effect'\nimport HealthLevel from '@/models/HealthLevel'\nimport Item from '@/models/Item'\nimport Resource from '@/models/Resource'\nimport Skill from '@/models/Skill'\nimport Spell from '@/models/Spell'\nimport Trait from '@/models/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  HealthLevel,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React from 'react'\nimport components from '@/components'\nimport Conditions from '@/components/Conditions'\nimport Layout from '@/components/Layout'\nimport ListOf from '@/components/List'\nimport models from '@/models'\nimport noop from '@/utilities/noop'\nimport './Sheet.scss'\n\n@observer class Sheet extends React.Component {\n  static defaultProps = {\n    character: {},\n    onChange: noop,\n    onMount: noop,\n  }\n\n  state = { size: 'large' }\n\n  constructor(props) {\n    super(props)\n    this.onCharacterSnapshotDisposer = onSnapshot(this.props.character, (snapshot) => {\n      this.props.onChange(snapshot, this.props.layout.toJSON(), this)\n    })\n    this.onLayoutSnapshotDisposer = onSnapshot(this.props.layout, (snapshot) => {\n      this.props.onChange(this.props.character.toJSON(), snapshot, this)\n    })\n    window.addEventListener('resize', this.handleWindowResize)\n  }\n  componentDidMount() {\n    this.handleWindowResize()\n    this.props.onMount(this)\n  }\n  componentWillUnmount() {\n    this.onCharacterSnapshotDisposer()\n    this.onLayoutSnapshotDisposer()\n  }\n\n  handleWindowResize = () => {\n    let size = 'large'\n    if (window.matchMedia('(min-width: 5in) and (max-width: 7.5in)').matches) {\n      size = 'medium'\n    } else if (window.matchMedia('(max-width: 5in)').matches) {\n      size = 'small'\n    }\n    if (size !== this.state.size) this.setState({ size })\n  }\n\n  renderComponent = (parent, model, key) => {\n    if (model.type) {\n      const { title } = model\n      const typename = model.type.toLowerCase()\n      const List = ListOf(\n        models[model.type],\n        components[model.type],\n        { className: `${typename}-list` }\n      )\n      const collection = this.props.character[`${typename}s`]\n      return (\n        <List {...{ key, layout: model, title }} collection={collection} columns={model.columns} />\n      )\n    }\n\n    return (\n      <Layout key={model.hash} model={model} parentColumns={parent.columns}>\n        {model.children.map((child, i) => this.renderComponent(model, child, i))}\n      </Layout>\n    )\n  }\n\n  render() {\n    const { character, layout } = this.props\n    const { size } = this.state\n\n    return (\n      <div className={`sheetforge sheet ${size}`}>\n        <Conditions model={character} />\n        {layout.children.map(this.renderComponent.bind(null, layout))}\n      </div>\n    )\n  }\n}\n\nexport default Sheet\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport Character from '@/models/Character'\nimport Layout from '@/models/Layout'\nimport Sheet from '@/components/Sheet'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"character-sheet\"}}>{`Character Sheet`}</MDXTag>\n<Sheet\n  layout={Layout.create({\n    children: [\n      { title: 'Descriptors', children: [{ columns: 3, type: 'Descriptor' }] },\n      { title: 'Attributes', children: [{ columns: 4, type: 'Attribute' }] },\n      { columns: 3, children: [\n        { colSpan: 1, children: [\n          { title: 'Traits', children: [{ type: 'Trait' }] },\n          { title: 'Resources', children: [{ type: 'Resource' }] },\n        ] },\n        { colSpan: 2, children: [\n          { title: 'Skills', children: [{ columns: 2, type: 'Skill' }] },\n          { title: 'Items', children: [{ columns: 1, type: 'Item' }] },\n          { title: 'Spells', children: [{ columns: 1, type: 'Spell' }] },\n        ] },\n      ] },\n    ]\n  })}\n  character={Character.create({})}\n  onChange={(character, layout) => {\n    localStorage.setItem('sf-example', JSON.stringify({ character, layout }))\n  }}\n  onMount={(self) => {\n    const saved = localStorage.getItem('sf-example')\n    if (saved) {\n      const example = JSON.parse(saved)\n      self.props.character.set(example.character)\n      self.props.layout.set(example.layout)\n    }\n  }}\n/></MDXTag>\n  "],"sourceRoot":""}