{"version":3,"sources":["webpack://sheetforge/./source/components/MultiToggle/MultiToggle.js","webpack://sheetforge/./source/components/MultiToggle/MultiToggle.scss","webpack://sheetforge/./source/components/MultiToggle/MultiToggle.mdx","webpack://sheetforge/./source/utilities/noop.js"],"names":["MultiToggle","selected","target","index","className","options","option","handleOptionClick","Component","onChange","undefined","layoutProps","MDXContent","props","layout","components","types","display","value","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAIqBA,Y,izBAQX,CAAEC,QAAQ,CAAE,IAAZ,C,8LAEY,cAAgB,IAAbC,OAAa,MAAbA,MAAa,CAClC,GAAMC,MAAK,CAAG,gFAAID,MAAM,CAANA,cAAJ,kBAAd,MAAc,CAAd,CACA,GAAMD,SAAQ,CAAG,oBAAjB,KAAiB,CAAjB,CAEA,GAAI,uBAAJ,UAAuC,CACrC,+BADF,KAEO,CACL,eAAc,CAAEA,QAAQ,CAARA,QAAF,CAAd,EACD,C,6IAGM,iCACwB,KADxB,MACCG,SADD,uBACYC,OADZ,qBAEP,GAAMJ,SAAQ,CAAG,gCACb,WADa,SAEb,WAFJ,SAIA,MACE,mEAAK,SAAS,CAAE,wCAAhB,EACG,OAAO,CAAP,IAAY,2BACX,mEACE,SAAS,CAAE,iBAAUK,MAAM,GAANA,cAAV,OADb,IACa,EADb,CAEE,GAAG,CAFL,IAGE,OAAO,CAAE,MAAI,CAACC,iBAHhB,EAKGD,MAAM,CANE,OACX,CADW,CAFjB,CAEK,CADH,CADF,CAaD,C,yBAxCsCE,+C,+EAApBR,W,gBACG,CACpBI,SAAS,CADW,GAEpBK,QAAQ,CAFY,gEAGpBJ,OAAO,CAHa,GAIpBJ,QAAQ,CAAES,SAJU,C;;;;;;;;;;;;;ACLxB,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOA,GAAMC,YAAW,CAAG,EAApB,C,GAGqBC,W,6IACnB,oBAAYC,KAAZ,CAAmB,yGACjB,sMAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,2HACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,mHAGP,MAAO,4DAAC,kDAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAIX,2DAAC,kDAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,uBAAN,CAAjD,0BAJW,CAKX,2DAAC,+CAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,0TAAnC,CAA+V,OAAO,CAAE,CAACF,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KAA5B,CAAkCG,KAAK,CAALA,qDAAlC,CAAwChB,WAAW,CAAXA,wEAAxC,CAAxW,EACE,2DAAC,wEAAD,EACE,OAAO,CAAE,CACP,CAAEiB,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,CAAC,OAAD,CAAU,KAAV,CAAzB,CADO,CAEP,CAAED,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,CAAC,OAAD,CAAU,MAAV,CAAzB,CAFO,CAGP,CAAED,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,CAAC,SAAD,CAAY,KAAZ,CAAzB,CAHO,CAIP,CAAED,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,CAAC,SAAD,CAAY,KAAZ,CAAzB,CAJO,CAKP,CAAED,OAAO,CAAE,IAAX,CAAiBC,KAAK,CAAE,UAAxB,CALO,CADX,EADF,CALW,CAAP,CAiBD,C,wBAzBqCC,4CAAK,CAACX,S;;;;;;;;;;;;;ACV/B,mEAAM,CAArB,G","file":"static/js/components-multi-toggle-multi-toggle.f193610a.js","sourcesContent":["import React, { Component } from 'react'\nimport noop from '@/utilities/noop'\nimport './MultiToggle.scss'\n\nexport default class MultiToggle extends Component {\n  static defaultProps = {\n    className: '',\n    onChange: noop,\n    options: [],\n    selected: undefined,\n  }\n\n  state = { selected: null }\n\n  handleOptionClick = ({ target }) => {\n    const index = [...target.parentElement.children].indexOf(target)\n    const selected = this.props.options[index]\n\n    if (this.props.selected !== undefined) {\n      this.props.onChange(selected)\n    } else {\n      this.setState({ selected })\n    }\n  }\n\n  render() {\n    const { className, options } = this.props\n    const selected = this.props.selected !== undefined\n      ? this.props.selected\n      : this.state.selected\n\n    return (\n      <div className={`multi-toggle ${className}`.trim()}>\n        {options.map((option, key) => (\n          <div\n            className={`toggle ${option === selected ? 'on' : 'off'}`.trim()}\n            key={key}\n            onClick={this.handleOptionClick}\n          >\n            {option.display}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport MultiToggle from '@/components/MultiToggle'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multitoggle-component\"}}>{`MultiToggle Component`}</MDXTag>\n<Playground __position={0} __code={'<MultiToggle\\n  options={[\\n    { display: \\'A-Z\\', value: [\\'alpha\\', \\'asc\\'] },\\n    { display: \\'Z-A\\', value: [\\'alpha\\', \\'desc\\'] },\\n    { display: \\'0-9\\', value: [\\'numeric\\', \\'asc\\'] },\\n    { display: \\'9-0\\', value: [\\'numeric\\', \\'dec\\'] },\\n    { display: \\'ðŸš«\\', value: \\'disabled\\' },\\n  ]}\\n/>'} __scope={{props: this ? this.props : props,types,MultiToggle}}>\n  <MultiToggle\n    options={[\n      { display: 'A-Z', value: ['alpha', 'asc'] },\n      { display: 'Z-A', value: ['alpha', 'desc'] },\n      { display: '0-9', value: ['numeric', 'asc'] },\n      { display: '9-0', value: ['numeric', 'dec'] },\n      { display: 'ðŸš«', value: 'disabled' },\n    ]}\n  />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","export default () => {}\n"],"sourceRoot":""}