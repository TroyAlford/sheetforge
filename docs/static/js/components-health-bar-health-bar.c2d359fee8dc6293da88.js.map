{"version":3,"sources":["webpack://sheetforge/./source/components/HealthBar/HealthBar.mdx"],"names":["__webpack_exports__","_ref","components","props","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_2__","name","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__codesandbox","__code","__scope","types","CharacterModel","CollectionOf","HealthBar","HealthLevel","health","create","damage","penalty","Fragment","_components_HealthBar__WEBPACK_IMPORTED_MODULE_7__","model","vertical"],"mappings":"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","file":"static/js/components-health-bar-health-bar.1f354d46.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport CharacterModel from '@/models/Character'\nimport CollectionOf from '@/models/generic/Collection'\nimport HealthBar from '@/components/HealthBar'\nimport HealthLevel from '@/models/HealthLevel'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"health-bar-component\"}}>{`Health Bar Component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Character`}</MDXTag>{` model supports two different types of health. Simple numeric health (hitpoints) are best represented with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Attribute`}</MDXTag>{` component. For systems which have more complex health models, however, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`HealthBar`}</MDXTag>{` is used to manage each `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`HealthLevel`}</MDXTag>{`'s level of damage independently.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`HealthLevel`}</MDXTag>{` allows one of four possible settings for its `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`damage`}</MDXTag>{` property:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`'none'`}</MDXTag>{` means `}<MDXTag name=\"em\" components={components} parentName=\"li\">{`uninjured`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`'light'`}</MDXTag>{` indicates bruising or superficial damage`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`'heavy'`}</MDXTag>{` indicates lascerations, broken bones, or deep flesh wounds`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`'bane'`}</MDXTag>{` indicates supernatural or otherwise difficult-to-heal damage`}</MDXTag>\n</MDXTag>\n<Playground __position={0} __codesandbox={`undefined`} __code={`{() => {\n  const HealthBarModel = CollectionOf(HealthLevel)\n  const health = HealthBarModel.create([\n    { name: \\'Healthy\\', damage: \\'bane\\' },\n    { name: \\'Bruised\\', damage: \\'heavy\\', penalty: -1 },\n    { name: \\'Injured\\', damage: \\'light\\', penalty: -2 },\n    { name: \\'Crippled\\', damage: \\'none\\', penalty: -3 },\n    { name: \\'Incapacitated\\', penalty: -5 },\n  ])\n  return (\n    <>\n      <h2>Rendered Vertically</h2>\n      <HealthBar model={health} vertical />\n      <h2>Rendered Horizontally</h2>\n      <HealthBar model={health} />\n    </>\n  )\n}}`} __scope={{props,types,CharacterModel,CollectionOf,HealthBar,HealthLevel}}>\n  {() => {\n    const HealthBarModel = CollectionOf(HealthLevel)\n    const health = HealthBarModel.create([\n      { name: 'Healthy', damage: 'bane' },\n      { name: 'Bruised', damage: 'heavy', penalty: -1 },\n      { name: 'Injured', damage: 'light', penalty: -2 },\n      { name: 'Crippled', damage: 'none', penalty: -3 },\n      { name: 'Incapacitated', penalty: -5 },\n    ])\nreturn (<>\n  <h2>Rendered Vertically</h2>\n  <HealthBar model={health} vertical />\n  <h2>Rendered Horizontally</h2>\n  <HealthBar model={health} />\n</>)\n  }}\n</Playground></MDXTag>\n  "],"sourceRoot":""}