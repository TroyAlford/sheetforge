{"version":3,"sources":["webpack://sheetforge/./source/components/index.js","webpack://sheetforge/./source/components/Conditions/Conditions.js","webpack://sheetforge/./source/components/Layout/Layout.js","webpack://sheetforge/./source/models/index.js","webpack://sheetforge/./source/components/Sheet/Sheet.js","webpack://sheetforge/./source/components/Sheet/Sheet.mdx"],"names":["source_components","Attribute","Descriptor","Effect","Health","HealthBar","Item","Resource","Skill","Spell","Trait","observer","_temp","_class","_Component","Conditions","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","availableConditions","props","model","conditions","asArray","JSON","CACHE","forceUpdate","condition","value","delete","isCurrent","react_default","a","createElement","key","className","Editable","onChange","handleCheckbox","inherits_default","createClass_default","onSnapshotDisposer","onSnapshot","handleSnapshot","Expandable","map","renderCondition","react","Layout","React","noop","title","set","_this2","snapshot","snapshotJSON","_this$props","children","parentColumns","_this$props$model","colSpan","style","width","Fragment","ref","titleBar","handleChangeTitle","placeholder","expandByDefault","omitItemWrapper","toggleButtonParent","current","Component","models","Attribute_Attribute","Descriptor_Descriptor","Effect_Effect","HealthLevel","Item_Item","Resource_Resource","Skill_Skill","Spell_Spell","components_Sheet_Sheet","Sheet","size","window","matches","state","setState","parent","type","typename","toLowerCase","List","ListOf","components","collection","character","extends_default","layout","columns","Layout_Layout_Layout","hash","child","i","renderComponent","onCharacterSnapshotDisposer","toJSON","onLayoutSnapshotDisposer","handleWindowResize","onMount","components_Conditions_Conditions","bind","__webpack_exports__","_ref","objectWithoutProperties_default","dist","name","id","create","Character","localStorage","setItem","stringify","self","saved","getItem","example","parse"],"mappings":"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","file":"static/js/components-sheet-sheet.0dae43b1.js","sourcesContent":["import Attribute from '@/components/Attribute'\nimport Descriptor from '@/components/Descriptor'\nimport Effect from '@/components/Effect'\nimport Health from '@/components/HealthBar'\nimport Item from '@/components/Item'\nimport Resource from '@/components/Resource'\nimport Skill from '@/components/Skill'\nimport Spell from '@/components/Spell'\nimport Trait from '@/components/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  Health,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport './Conditions.scss'\n\nexport default observer(class Conditions extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  CACHE = {}\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, this.handleSnapshot)\n  }\n\n  componentWillUnmount() {\n    this.onSnapshotDisposer()\n  }\n\n  handleSnapshot = () => {\n    const availableConditions = this.props.model.availableConditions()\n    const conditions = this.props.model.conditions.asArray\n\n    if (\n      JSON.stringify(availableConditions) !== JSON.stringify(this.CACHE.availableConditions) ||\n      JSON.stringify(conditions) !== JSON.stringify(this.CACHE.conditions)\n    ) {\n      this.CACHE.availableConditions = availableConditions\n      this.CACHE.conditions = conditions\n      this.forceUpdate()\n    }\n  }\n\n  handleCheckbox = (condition, value) => {\n    const { conditions } = this.props.model\n\n    if (value && !conditions.includes(condition)) {\n      conditions.push(condition)\n    } else if (typeof conditions.delete === 'function') {\n      conditions.delete(condition)\n    } else {\n      conditions.splice(conditions.indexOf(condition), 1)\n    }\n    this.forceUpdate()\n  }\n\n  renderCondition = (condition) => {\n    const { conditions } = this.props.model\n    const isCurrent = conditions.includes(condition)\n    return (\n      <div key={condition} className={`condition ${isCurrent ? 'current' : 'available'}`}>\n        <Editable\n          className=\"current\"\n          onChange={value => this.handleCheckbox(condition, value)}\n          value={isCurrent}\n        />\n        <div className=\"name\">{condition}</div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"conditions\">\n        <Expandable>\n          {this.props.model.availableConditions().map(this.renderCondition)}\n        </Expandable>\n      </div>\n    )\n  }\n})\n","import { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport noop from '@/utilities/noop'\nimport './Layout.scss'\n\nexport default class Layout extends Component {\n  titleBar = React.createRef()\n\n  onSnapshotDisposer = noop\n  snapshot = null\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, (snapshot) => {\n      const snapshotJSON = JSON.stringify(snapshot)\n      if (this.snapshot !== snapshotJSON) {\n        this.snapshot = snapshotJSON\n        this.forceUpdate()\n      }\n    })\n    this.forceUpdate() // Immediate redraw to place buttonParent\n  }\n  componentWillUnmount() { this.onSnapshotDisposer() }\n\n  handleChangeTitle = title => this.props.model.set({ title })\n\n  render() {\n    const { children, parentColumns } = this.props\n    const { colSpan, title } = this.props.model\n\n    return (\n      <div className=\"layout\" style={{ width: `calc(100%/${parentColumns}*${colSpan})` }}>\n        {title === undefined\n          ? children\n          : <>\n            <div className=\"title-bar\" ref={this.titleBar}>\n              <Editable\n                className=\"title\"\n                onChange={this.handleChangeTitle}\n                placeholder=\"Section Title\"\n                value={title}\n              />\n            </div>\n            <Expandable\n              expandByDefault\n              omitItemWrapper\n              toggleButtonParent={this.titleBar.current}\n            >\n              {children}\n            </Expandable>\n          </>\n        }\n      </div>\n    )\n  }\n}\n","import Attribute from '@/models/Attribute'\nimport Descriptor from '@/models/Descriptor'\nimport Effect from '@/models/Effect'\nimport HealthLevel from '@/models/HealthLevel'\nimport Item from '@/models/Item'\nimport Resource from '@/models/Resource'\nimport Skill from '@/models/Skill'\nimport Spell from '@/models/Spell'\nimport Trait from '@/models/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  HealthLevel,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React from 'react'\nimport components from '@/components'\nimport Conditions from '@/components/Conditions'\nimport Layout from '@/components/Layout'\nimport ListOf from '@/components/List'\nimport models from '@/models'\nimport noop from '@/utilities/noop'\nimport './Sheet.scss'\n\n@observer class Sheet extends React.Component {\n  static defaultProps = {\n    character: {},\n    onChange: noop,\n    onMount: noop,\n  }\n\n  state = { size: 'large' }\n\n  constructor(props) {\n    super(props)\n    this.onCharacterSnapshotDisposer = onSnapshot(this.props.character, (snapshot) => {\n      this.props.onChange(snapshot, this.props.layout.toJSON(), this)\n    })\n    this.onLayoutSnapshotDisposer = onSnapshot(this.props.layout, (snapshot) => {\n      this.props.onChange(this.props.character.toJSON(), snapshot, this)\n    })\n    window.addEventListener('resize', this.handleWindowResize)\n  }\n  componentDidMount() {\n    this.handleWindowResize()\n    this.props.onMount(this)\n  }\n  componentWillUnmount() {\n    this.onCharacterSnapshotDisposer()\n    this.onLayoutSnapshotDisposer()\n  }\n\n  handleWindowResize = () => {\n    let size = 'large'\n    if (window.matchMedia('(min-width: 5in) and (max-width: 7.5in)').matches) {\n      size = 'medium'\n    } else if (window.matchMedia('(max-width: 5in)').matches) {\n      size = 'small'\n    }\n    if (size !== this.state.size) this.setState({ size })\n  }\n\n  renderComponent = (parent, model, key) => {\n    if (model.type) {\n      const { title } = model\n      const typename = model.type.toLowerCase()\n      const List = ListOf(\n        models[model.type],\n        components[model.type],\n        { className: `${typename}-list` }\n      )\n      const collection = this.props.character[`${typename}s`]\n      return (\n        <List {...{ key, layout: model, title }} collection={collection} columns={model.columns} />\n      )\n    }\n\n    return (\n      <Layout key={model.hash} model={model} parentColumns={parent.columns}>\n        {model.children.map((child, i) => this.renderComponent(model, child, i))}\n      </Layout>\n    )\n  }\n\n  render() {\n    const { character, layout } = this.props\n    const { size } = this.state\n\n    return (\n      <div className={`sheetforge sheet ${size}`}>\n        <Conditions model={character} />\n        {layout.children.map(this.renderComponent.bind(null, layout))}\n      </div>\n    )\n  }\n}\n\nexport default Sheet\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport Character from '@/models/Character'\nimport Layout from '@/models/Layout'\nimport Sheet from '@/components/Sheet'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"character-sheet\"}}>{`Character Sheet`}</MDXTag>\n<Sheet\n  layout={Layout.create({\n    children: [\n      { title: 'Descriptors', children: [{ columns: 3, type: 'Descriptor' }] },\n      { title: 'Attributes', children: [{ columns: 4, type: 'Attribute' }] },\n      { columns: 3, children: [\n        { colSpan: 1, children: [\n          { title: 'Traits', children: [{ type: 'Trait' }] },\n          { title: 'Resources', children: [{ type: 'Resource' }] },\n        ] },\n        { colSpan: 2, children: [\n          { title: 'Skills', children: [{ columns: 2, type: 'Skill' }] },\n          { title: 'Items', children: [{ columns: 1, type: 'Item' }] },\n          { title: 'Spells', children: [{ columns: 1, type: 'Spell' }] },\n        ] },\n      ] },\n    ]\n  })}\n  character={Character.create({})}\n  onChange={(character, layout) => {\n    localStorage.setItem('sf-example', JSON.stringify({ character, layout }))\n  }}\n  onMount={(self) => {\n    const saved = localStorage.getItem('sf-example')\n    if (saved) {\n      const example = JSON.parse(saved)\n      self.props.character.set(example.character)\n      self.props.layout.set(example.layout)\n    }\n  }}\n/></MDXTag>\n  "],"sourceRoot":""}