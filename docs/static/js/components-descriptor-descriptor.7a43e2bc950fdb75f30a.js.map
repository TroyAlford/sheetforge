{"version":3,"sources":["webpack://sheetforge/./source/models/Descriptor/Descriptor.js","webpack://sheetforge/./source/utilities/unique.js","webpack://sheetforge/./source/components/Editable/Editable.js","webpack://sheetforge/./source/utilities/splitObjectPath.js","webpack://sheetforge/./source/utilities/getPathValue.js","webpack://sheetforge/./source/utilities/setPathValue.js","webpack://sheetforge/./source/models/generic/IEditable/IEditable.js","webpack://sheetforge/./source/components/Editable/Editable.scss","webpack://sheetforge/./source/components/Descriptor/Descriptor.js","webpack://sheetforge/./source/components/Descriptor/Descriptor.mdx","webpack://sheetforge/./source/components/Descriptor/Descriptor.scss","webpack://sheetforge/./source/utilities/bound.js","webpack://sheetforge/./source/utilities/hash.js","webpack://sheetforge/./source/models/generic/IIdentity/IIdentity.js","webpack://sheetforge/./source/models/generic/ICategorizable/ICategorizable.js","webpack://sheetforge/./source/utilities/noop.js"],"names":["ICategorizable","name","value","array","all","TYPES","Editable","editing","resetValue","type","editorType","editor","target","min","max","parseFloat","Number","bound","event","key","ctrlKey","metaKey","Boolean","createRefWithAutoFocus","lines","paragraphs","index","className","handleToggleEditing","placeholder","readOnlyValue","showPlaceholder","displayValue","readOnly","classes","props","onFocus","tabIndex","React","Component","forceEditMode","onChange","onEditEnd","onEditStart","onKeyDown","onKeyPress","onKeyUp","step","PATH_SPLITTER","path","split","splitObjectPath","Array","property","o","IEditable","isIEditable","savedVersion","deepEqual","self","afterCreate","isPathDirty","current","getPathValue","initial","markAsClean","Object","isObservableArray","child","reset","set","undefined","setPathValue","Descriptor","observer","model","onDelete","noop","display","getter","layoutProps","MDXContent","layout","components","DescriptorModel","create","radix","string","String","h","char","Math","randomHash","hash","getValue","isICategorizable","categories","unique","category","lastUsedName","getCategories"],"mappings":"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","file":"static/js/components-descriptor-descriptor.e6480f7e.js","sourcesContent":["import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(),\n  IEditable,\n  types.model({\n    name: 'New Descriptor...',\n    value: '',\n  })\n).named('Descriptor')\n","export default (array = []) => (\n  array.filter((item, index, all) => all.indexOf(item) === index)\n)\n","import React from 'react'\nimport bound from '@/utilities/bound'\nimport noop from '@/utilities/noop'\nimport './Editable.scss'\n\nconst TYPES = [\n  // Strings\n  'text', 'multiline',\n  // Checkboxes\n  'boolean',\n  // Numbers\n  'number', 'slider',\n]\n\nexport default class Editable extends React.Component {\n  static displayName = 'Editable'\n\n  static defaultProps = {\n    className: '',\n    forceEditMode: false,\n    max: undefined,\n    min: undefined,\n    onChange: noop,\n    onEditEnd: noop,\n    onEditStart: noop,\n    onKeyDown: noop,\n    onKeyPress: noop,\n    onKeyUp: noop,\n    placeholder: '',\n    readOnly: false,\n    readOnlyValue: undefined,\n    step: 1,\n    type: undefined,\n    value: '',\n  }\n\n  state = {\n    editing: false,\n    resetValue: this.props.value,\n  }\n\n  get editing() {\n    return this.props.forceEditMode || this.state.editing\n  }\n\n  getEditorType = () => {\n    const { value } = this.props\n    let { type } = this.props\n\n    if (type !== undefined && TYPES.includes(type)) { return type }\n\n    type = typeof value\n    if (type === 'string') { return value.includes('\\n') ? 'multiline' : 'text' }\n    if (['boolean', 'number'].includes(type)) { return type }\n\n    return 'text'\n  }\n\n  resetChanges = () => {\n    this.props.onChange(this.state.resetValue, this.props.value)\n    this.handleToggleEditing()\n  }\n\n  createRefWithAutoFocus = (editor) => {\n    if (!editor) { return }\n    this.editor = editor\n\n    const editorType = this.getEditorType()\n    if (editorType !== 'boolean' && typeof editor.focus === 'function') { editor.focus() }\n\n    if (['boolean', 'number'].includes(this.getEditorType())) { return }\n    if (this.props.forceEditMode && typeof editor.setSelectionRange === 'function') {\n      editor.setSelectionRange(editor.value.length, editor.value.length)\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { min, max } = this.props\n    let { value } = target\n\n    // eslint-disable-next-line default-case\n    switch (this.getEditorType()) {\n      case 'slider':\n      case 'number':\n        value = parseFloat(value || 0)\n        // eslint-disable-next-line prefer-destructuring\n        if (Number.isNaN(value)) { value = this.props.value }\n        value = bound(value, { max, min })\n    }\n    this.props.onChange(value, this.state.resetValue)\n  }\n\n  handleKeys = (event) => {\n    const { target, key, ctrlKey, metaKey } = event\n\n    if (this.props.onKeyDown !== noop) {\n      this.props.onKeyDown(event)\n      if (event.isDefaultPrevented()) return\n    }\n\n    if (key === 'Escape') { this.resetChanges() }\n    if (key === 'Enter') {\n      if (target.nodeName !== 'TEXTAREA' || ctrlKey || metaKey) {\n        this.handleToggleEditing()\n      }\n    }\n  }\n\n  handleReceivingFocus = () => {\n    if (this.props.readOnly) { return }\n    if (!this.state.editing) { this.handleToggleEditing() }\n  }\n\n  handleToggleEditing = () => {\n    if (this.props.readOnly) { return }\n\n    const editing = !this.editing\n\n    this.setState({ editing, resetValue: this.props.value }, () => {\n      if (this.state.editing) {\n        this.props.onEditStart()\n      } else {\n        this.props.onEditEnd()\n      }\n    })\n  }\n\n  selectOnFocus = event => event.target.select()\n\n  toggleBoolean = () => {\n    this.props.onEditStart()\n    this.props.onChange(!this.props.value, this.props.value)\n    this.props.onEditEnd()\n  }\n\n  renderBoolean = () => (\n    <input\n      type=\"checkbox\"\n      checked={Boolean(this.props.value)}\n      disabled={this.props.readOnly}\n      onChange={this.toggleBoolean}\n      ref={this.createRefWithAutoFocus}\n    />\n  )\n\n  renderMultiline = () => {\n    if (!this.editing) {\n      const lines = (this.props.value || this.props.placeholder).split('\\n')\n      const paragraphs = lines.map((line, index) => <p key={index}>{line}</p>\n      )\n      const className = ['multiline', this.props.value ? '' : 'placeholder'].join(' ').trim()\n      return <div className={className} onClick={this.handleToggleEditing}>{paragraphs}</div>\n    }\n\n    return (\n      <textarea\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        rows={this.props.value.split('\\n').length}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderNumber = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"number\"\n        disabled={this.props.readOnly}\n        max={this.props.max}\n        min={this.props.min}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        step={this.props.step}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderSlider = () => (\n    <input\n      type=\"range\"\n      disabled={this.props.readOnly}\n      max={this.props.max}\n      min={this.props.min}\n      onBlur={this.handleToggleEditing}\n      onChange={this.handleChange}\n      onKeyDown={this.props.onKeyDown}\n      onKeyPress={this.props.onKeyPress}\n      onKeyUp={this.props.onKeyUp}\n      ref={this.createRefWithAutoFocus}\n      step={this.props.step}\n      value={this.props.value}\n    />\n  )\n\n  renderText = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"text\"\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderStatic = () => {\n    const { placeholder, readOnlyValue, value } = this.props\n    const showPlaceholder = placeholder && !value\n    const displayValue = readOnlyValue !== undefined ? readOnlyValue : value\n    const className = showPlaceholder ? 'placeholder' : ''\n    return (\n      <span className={className} onClick={this.handleToggleEditing}>\n        {showPlaceholder ? placeholder : displayValue}\n      </span>\n    )\n  }\n\n  renderEditor = () => {\n    switch (this.getEditorType()) {\n      case 'boolean':\n        return this.renderBoolean()\n      case 'slider':\n        return this.renderSlider()\n      case 'multiline':\n        return this.renderMultiline()\n      case 'number':\n        return this.renderNumber()\n      default:\n        return this.renderText()\n    }\n  }\n\n  render = () => {\n    const { className, readOnly } = this.props\n\n    const classes = [\n      'editable',\n      this.editing ? 'editing' : '',\n      className || '',\n      readOnly ? 'readonly' : '',\n    ].filter(Boolean)\n\n    let props = {}\n    if (!readOnly && !this.editing) {\n      props = { onFocus: this.handleReceivingFocus, tabIndex: '0' }\n    }\n\n    return (\n      <div className={classes.join(' ')} {...props}>\n        {this.renderEditor()}\n      </div>\n    )\n  }\n}\n","const PATH_SPLITTER = /([a-z0-9-_]+)(?![[\"'\\].])*/ig\n\nexport default (path) => {\n  if (typeof path !== 'string') return null\n  return path.match(PATH_SPLITTER)\n}\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path) => {\n  if (typeof path !== 'string') return undefined\n\n  const split = splitObjectPath(path)\n\n  if (!Array.isArray(split)) return undefined\n\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target) return target[property]\n  return undefined\n}\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path, value) => {\n  const split = splitObjectPath(path)\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target && target.isIEditable) {\n    target.set(property, value)\n  } else {\n    target[property] = value\n  }\n}\n","import deepEqual from 'deep-equal'\nimport { isObservableArray } from 'mobx'\nimport { types } from 'mobx-state-tree'\nimport getPathValue from '@/utilities/getPathValue'\nimport setPathValue from '@/utilities/setPathValue'\n\nconst IEditable = types.model('IEditable', {\n  // Any\n}).volatile(() => ({\n  isIEditable: true,\n  savedVersion: {},\n})).views(self => ({\n  get isDirty() { return !deepEqual(self.toJSON(), self.savedVersion) },\n})).actions(self => ({\n  /* eslint-disable no-param-reassign */\n\n  afterCreate() { self.savedVersion = self.toJSON() },\n  isPathDirty: (path) => {\n    const current = getPathValue(self.toJSON(), path)\n    const initial = getPathValue(self.savedVersion, path)\n    return !deepEqual(current, initial)\n  },\n  markAsClean() {\n    self.savedVersion = self.toJSON()\n\n    Object.keys(self.savedVersion).forEach((key) => {\n      const value = self[key]\n      if (!value) { return }\n\n      if (value.isIEditable) {\n        value.markAsClean()\n      } else if (isObservableArray(value)) {\n        value.forEach(child => (child && child.isIEditable && child.markAsClean()))\n      }\n    })\n  },\n  reset() { Object.assign(self, self.savedVersion) },\n  set(key = {}, value = undefined) {\n    if (typeof key === 'string' && value !== undefined) {\n      // allows: model.set('foo.bar', 'bar')\n      if (self[key] !== undefined) {\n        self[key] = value\n      } else {\n        setPathValue(self, key, value)\n      }\n    } else if (typeof key === 'object' && value === undefined) {\n      // allows: model.set({ foo: 'Foo', bar: 'Bar' })\n      Object.assign(self, key)\n    }\n  },\n\n  /* eslint-enable no-param-reassign */\n}))\n\nexport default IEditable\n","// extracted by mini-css-extract-plugin","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport noop from '@/utilities/noop'\nimport './Descriptor.scss'\n\n@observer class Descriptor extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.value,\n  }]\n\n  handleChangeName = name => this.props.model.set({ name })\n  handleChangeValue = value => this.props.model.set({ value })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n\n  render() {\n    return (\n      <div className=\"descriptor\">\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={this.props.model.name}\n        />\n        <Editable\n          className=\"value\"\n          type=\"text\"\n          onChange={this.handleChangeValue}\n          value={this.props.model.value}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Descriptor\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport Descriptor from '@/components/Descriptor'\nimport DescriptorModel from '@/models/Descriptor'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"descriptor\"}}>{`Descriptor`}</MDXTag>\n<Playground __position={0} __code={'<Descriptor\\n  model={DescriptorModel.create({\\n    name: \\'Hair Color\\',\\n    value: \\'Brown\\',\\n  })}\\n/>'} __scope={{props: this ? this.props : props,Descriptor,DescriptorModel}}>\n  <Descriptor model={DescriptorModel.create({\n    name: 'Hair Color',\n    value: 'Brown',\n  })} />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin","export default (value, { min, max }) => {\n  if (min !== undefined && value < min) return min\n  if (max !== undefined && value > max) return max\n  return value\n}\n","export default function hash(value = '', radix = 16) {\n  const string = String(value)\n  let h = 0\n  string.split('').forEach((char) => {\n    /* eslint-disable no-bitwise */\n    h = ((h << 5) - h) + char.charCodeAt(0)\n    h &= h // Convert to 32-bit integer\n    /* eslint-enable no-bitwise */\n  })\n  return Math.abs(h).toString(radix)\n}\n\nexport const randomHash = () => hash(Math.random().toString())\n","import { types } from 'mobx-state-tree'\nimport { randomHash } from '@/utilities/hash'\n\nexport default types.model({\n  // Nothing\n}).volatile(() => ({\n  hash: '',\n})).actions(self => ({\n  afterCreate() { self.hash = randomHash() }, // eslint-disable-line no-param-reassign\n}))\n","import { types } from 'mobx-state-tree'\nimport noop from '@/utilities/noop'\nimport unique from '@/utilities/unique'\n\nexport default (getValue = noop) => types.model({\n}).volatile(() => ({\n  isICategorizable: true,\n})).views((self) => {\n  function getCategories() {\n    if (!self.name) return []\n\n    const categories = self.name.split(':')\n    categories.pop() // remove the name\n\n    return unique(categories.map(category => category.trim()).filter(Boolean)).sort()\n  }\n  let lastUsedName = self.name\n  let categories = getCategories()\n\n  return {\n    get categories() {\n      if (!self.name || self.name === lastUsedName) return categories\n\n      lastUsedName = self.name\n      categories = getCategories()\n\n      return categories\n    },\n    get categoryValue() { return getValue(self) },\n  }\n})\n","export default () => {}\n"],"sourceRoot":""}