{"version":3,"sources":["webpack://sheetforge/./source/utilities/range.js","webpack://sheetforge/./source/components/Rating/Rating.js","webpack://sheetforge/./source/components/Trait/Trait.js","webpack://sheetforge/./source/components/Descriptor/Descriptor.js","webpack://sheetforge/./source/components/Skill/Skill.js","webpack://sheetforge/./source/components/Attribute/Attribute.js","webpack://sheetforge/./source/components/Item/Item.js","webpack://sheetforge/./source/components/index.js","webpack://sheetforge/./source/components/Conditions/Conditions.js","webpack://sheetforge/./source/components/Layout/Layout.js","webpack://sheetforge/./source/models/index.js","webpack://sheetforge/./source/components/Sheet/Sheet.js","webpack://sheetforge/./source/components/Resource/Resource.js","webpack://sheetforge/./source/components/Sheet/Sheet.mdx","webpack://sheetforge/./source/models/types/between.js","webpack://sheetforge/./source/models/Layout/Layout.js"],"names":["range","start","end","step","length","Math","Array","apply","toConsumableArray_default","map","_","i","Rating","event","number","parseInt","_this","props","onChange","_this$props","allowExcess","current","iconExcess","iconOff","iconOn","maximum","total","math","react_default","a","createElement","className","bound","min","data-number","key","onClick","handleIconClick","title","Component","noop","EffectList","ListOf","_models_Effect__WEBPACK_IMPORTED_MODULE_13__","_components_Effect__WEBPACK_IMPORTED_MODULE_10__","Trait","observer","name","model","set","value","onDelete","_this2","this","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Editable__WEBPACK_IMPORTED_MODULE_9__","handleChangeName","onEditEnd","handleCommitName","max","handleChangeValue","_components_Expandable__WEBPACK_IMPORTED_MODULE_11__","onToggle","expanded","onToggleExpanded","hash","collection","effects","_utilities_noop__WEBPACK_IMPORTED_MODULE_14__","display","getter","__webpack_exports__","Descriptor","type","Skill","mastery","theory","onChangeName","concat","onChangeTheory","onChangeMastery","Attribute","snapshot","e","toJSON","JSON","CACHE","conditions","forceUpdate","id","character","filter","effect","forEach","targetId","raw","String","Number","_ref","isComputed","onSnapshotDisposer","onSnapshot","handleSnapshot","rating","modifiedValue","join","modifier","modifierClassName","Boolean","react__WEBPACK_IMPORTED_MODULE_9___default","_components_Editable__WEBPACK_IMPORTED_MODULE_10__","handleCommitValue","onKeyDown","handleValueKeyDown","readOnlyValue","_components_Rating__WEBPACK_IMPORTED_MODULE_11__","Item","description","equipped","_this$props$model","handleToggleEquipped","handleChangeDescription","placeholder","components","Effect","Resource","Spell","_temp","_class","_Component","Conditions","_getPrototypeOf2","classCallCheck_default","_len","arguments","args","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","availableConditions","asArray","condition","delete","isCurrent","Editable","handleCheckbox","inherits_default","createClass_default","Expandable","renderCondition","react","Layout","React","snapshotJSON","children","parentColumns","colSpan","style","width","Fragment","ref","titleBar","handleChangeTitle","expandByDefault","omitItemWrapper","toggleButtonParent","models","Attribute_Attribute","Descriptor_Descriptor","Effect_Effect","Item_Item","Resource_Resource","Skill_Skill","Spell_Spell","Sheet","size","debounce","window","matches","state","setState","parent","typename","toLowerCase","List","extends_default","layout","columns","Layout_Layout_Layout","child","renderComponent","onCharacterSnapshotDisposer","onLayoutSnapshotDisposer","handleWindowResize","onMount","components_Conditions_Conditions","bind","handleChangeCurrent","handleChangeMaximum","_components_Rating__WEBPACK_IMPORTED_MODULE_10__","MDXContent","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_6___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","_components_Sheet__WEBPACK_IMPORTED_MODULE_12__","create","Character","localStorage","setItem","stringify","self","saved","getItem","example","parse","between","defaultTo","undefined","mobx_state_tree","optional","refinement","types","n","compose","IIdentity","IEditable","categorize","CollectionOf","late","string","sortOption","named"],"mappings":"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","file":"static/js/components-sheet-sheet.cc08a31a.js","sourcesContent":["export default (start, end) => {\n  const step = (start <= end) ? 1 : -1\n  const length = (Math.abs(end - start) / Math.abs(step)) + 1\n  return Array(...Array(length)).map((_, i) => start + (i * step))\n}\n","import React, { Component } from 'react'\nimport bound from '@/utilities/bound'\nimport math from '@/utilities/math'\nimport noop from '@/utilities/noop'\nimport range from '@/utilities/range'\nimport './Rating.scss'\n\nexport default class Rating extends Component {\n  static defaultProps = {\n    allowExcess: false,\n    current: 0,\n    iconExcess: <span className=\"dot excess icon-add\" />,\n    iconOff: <span className=\"dot empty\" />,\n    iconOn: <span className=\"dot filled\" />,\n    maximum: 5,\n    onChange: noop,\n  }\n\n  handleIconClick = (event) => {\n    const number = parseInt(event.target.getAttribute('data-number'), 10)\n    this.props.onChange(number === this.props.current ? number - 1 : number)\n  }\n\n  render = () => {\n    const { allowExcess, current, iconExcess, iconOff, iconOn, maximum } = this.props\n    const total = allowExcess ? math.max(current, maximum) : maximum\n\n    return (\n      <div className=\"rating\">\n        {(total > 0 || (allowExcess && current > 0))\n          ? range(1, bound(total, { min: 1 })).map(number => (\n            <span data-number={number} key={number} onClick={this.handleIconClick} title={number}>\n              {(number <= current && number <= maximum) && iconOn}\n              {(number > current && number <= maximum) && iconOff}\n              {(number > maximum) && iconExcess}\n            </span>\n          ))\n          : null\n        }\n      </div>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Effect from '@/components/Effect'\nimport Expandable from '@/components/Expandable'\nimport ListOf from '@/components/List'\nimport EffectModel from '@/models/Effect'\nimport noop from '@/utilities/noop'\nimport './Trait.scss'\n\nconst EffectList = ListOf(EffectModel, Effect)\n\n@observer class Trait extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n    onToggleExpanded: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.value,\n  }]\n\n  handleChangeName = name => this.props.model.set({ name })\n  handleChangeValue = value => this.props.model.set({ value })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n\n  render() {\n    const { model } = this.props\n\n    return (\n      <div className=\"trait\">\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={model.name}\n        />\n        <Editable\n          className=\"value\"\n          max={999}\n          min={-99}\n          onChange={this.handleChangeValue}\n          value={model.value}\n        />\n        <Expandable onToggle={expanded => this.props.onToggleExpanded(model.hash, expanded)}>\n          <EffectList collection={model.effects} title=\"Effects\" />\n        </Expandable>\n      </div>\n    )\n  }\n}\n\nexport default Trait\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport noop from '@/utilities/noop'\nimport './Descriptor.scss'\n\n@observer class Descriptor extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.value,\n  }]\n\n  handleChangeName = name => this.props.model.set({ name })\n  handleChangeValue = value => this.props.model.set({ value })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n\n  render() {\n    return (\n      <div className=\"descriptor\">\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={this.props.model.name}\n        />\n        <Editable\n          className=\"value\"\n          type=\"text\"\n          onChange={this.handleChangeValue}\n          value={this.props.model.value}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Descriptor\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport noop from '@/utilities/noop'\nimport './Skill.scss'\n\n@observer class Skill extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-desc',\n    getter: model => [-model.theory, -model.mastery, model.name],\n  }, {\n    display: 'icon-sort-size-desc',\n    getter: model => [-model.mastery, -model.theory, model.name],\n  }]\n\n  onChangeName = name => this.props.model.set({ name })\n  onChangeMastery = mastery => this.props.model.set({ mastery })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n  onChangeTheory = theory => this.props.model.set({ theory })\n\n  render() {\n    const { model } = this.props\n\n    return (\n      <div className=\"skill\">\n        <Editable\n          className=\"name\"\n          onChange={this.onChangeName}\n          onEditEnd={this.handleCommitName}\n          value={model.name}\n        />\n        <Editable\n          className={`theory ${(!model.theory && 'is-zero') || ''}`}\n          max={999}\n          min={-99}\n          onChange={this.onChangeTheory}\n          value={model.theory}\n        />\n        <Editable\n          className=\"mastery\"\n          max={999}\n          min={-99}\n          onChange={this.onChangeMastery}\n          value={model.mastery}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Skill\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Rating from '@/components/Rating'\nimport bound from '@/utilities/bound'\nimport math from '@/utilities/math'\nimport noop from '@/utilities/noop'\nimport './Attribute.scss'\n\n@observer class Attribute extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n    rating: false,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.modifiedValue(),\n  }]\n\n  CACHE = {}\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model.character, this.handleSnapshot)\n  }\n  componentWillUnmount() { this.onSnapshotDisposer() }\n\n  handleSnapshot = (snapshot) => {\n    const effects = this.props.model.effects().map(e => e.toJSON())\n    if (\n      JSON.stringify(effects) !== JSON.stringify(this.CACHE.effects) ||\n      JSON.stringify(snapshot.conditions) !== this.CACHE.conditions ||\n      this.CACHE.value !== this.props.model.value()\n    ) {\n      this.CACHE.conditions = JSON.stringify(snapshot.conditions)\n      this.CACHE.effects = effects\n      this.CACHE.value = this.props.model.value()\n      this.forceUpdate()\n    }\n  }\n  handleChangeName = (name) => {\n    const { id } = this.props.model\n    this.props.model.set({ name })\n    this.props.model.character.effects()\n      .filter(effect => effect.targetId === id)\n      .forEach((effect) => {\n        effect.set({ targetId: '' })\n        effect.set({ targetId: this.props.model.id })\n      })\n  }\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n  handleChangeValue = (raw) => {\n    let value = String(raw).replace(/[^a-z0-9+*()\\-/, ]/gi, '')\n    if (!Number.isNaN(Number(raw))) {\n      value = bound(Number(raw) || '', { max: 999, min: -99 })\n    }\n    this.props.model.set({ raw: value })\n  }\n  handleCommitValue = () => {\n    if (String(this.props.model.raw) === '') this.props.model.set({ raw: 0 })\n  }\n  handleValueKeyDown = ({ key }) => {\n    const { model } = this.props\n    if (model.isComputed) return\n\n    switch (key) {\n      case 'ArrowUp':\n        model.set({ raw: model.value() + 1 }); break\n      case 'ArrowDown':\n        model.set({ raw: model.value() - 1 }); break\n      default:\n    }\n  }\n\n  render() {\n    const { model, rating } = this.props\n    const modifiedValue = model.modifiedValue()\n    const value = model.value()\n\n    const className = [\n      'attribute',\n      `as-${rating ? 'rating' : 'numeric'}`,\n      `${model.isComputed ? 'is' : 'not'}-computed`,\n    ].join(' ')\n\n    const modifier = model.modifier()\n    const modifierClassName = [\n      'modifier',\n      modifier > 0 && 'positive',\n      modifier < 0 && 'negative',\n      modifier === 0 && 'zero',\n    ].filter(Boolean).join(' ')\n\n    return (\n      <div className={className}>\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={model.name}\n        />\n        <Editable\n          className=\"value rating\"\n          onChange={this.handleChangeValue}\n          onEditEnd={this.handleCommitValue}\n          onKeyDown={this.handleValueKeyDown}\n          readOnlyValue={(\n            <Rating\n              allowExcess\n              current={modifiedValue}\n              maximum={value}\n            />\n          )}\n          type=\"text\"\n          value={model.raw}\n        />\n        <Editable\n          className=\"value numeric\"\n          onChange={this.handleChangeValue}\n          onEditEnd={this.handleCommitValue}\n          onKeyDown={this.handleValueKeyDown}\n          readOnlyValue={value}\n          type=\"text\"\n          value={model.raw}\n        />\n        {model.effects().length !== 0 && (\n          <div\n            className={modifierClassName}\n            title={model.modifierText()}\n          >\n            {modifiedValue}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Attribute\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Effect from '@/components/Effect'\nimport Expandable from '@/components/Expandable'\nimport ListOf from '@/components/List'\nimport EffectModel from '@/models/Effect'\nimport noop from '@/utilities/noop'\nimport './Item.scss'\n\nconst EffectList = ListOf(EffectModel, Effect, { className: 'effect-list' })\n\n@observer class Item extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n    onToggleExpanded: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-backpack',\n    getter: model => [!model.equipped, model.name],\n  }]\n\n  handleChangeDescription = description => this.props.model.set({ description })\n  handleChangeName = name => this.props.model.set({ name })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n  handleToggleEquipped = () => this.props.model.set({ equipped: !this.props.model.equipped })\n\n  render() {\n    const { description, hash, name, effects, equipped } = this.props.model\n\n    return (\n      <div className={`item ${equipped ? '' : 'un'}equipped`}>\n        <Editable className=\"equipped\" onChange={this.handleToggleEquipped} value={equipped} />\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={name}\n        />\n        <Expandable onToggle={expanded => this.props.onToggleExpanded(hash, expanded)}>\n          <Editable\n            className=\"description\"\n            type=\"multiline\"\n            onChange={this.handleChangeDescription}\n            placeholder=\"Description...\"\n            value={description}\n          />\n          <EffectList collection={effects} title=\"Effects\" />\n        </Expandable>\n      </div>\n    )\n  }\n}\n\nexport default Item\n","import Attribute from '@/components/Attribute'\nimport Descriptor from '@/components/Descriptor'\nimport Effect from '@/components/Effect'\nimport Item from '@/components/Item'\nimport Resource from '@/components/Resource'\nimport Skill from '@/components/Skill'\nimport Spell from '@/components/Spell'\nimport Trait from '@/components/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport './Conditions.scss'\n\nexport default observer(class Conditions extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  CACHE = {}\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, this.handleSnapshot)\n  }\n\n  componentWillUnmount() {\n    this.onSnapshotDisposer()\n  }\n\n  handleSnapshot = () => {\n    const availableConditions = this.props.model.availableConditions()\n    const conditions = this.props.model.conditions.asArray\n\n    if (\n      JSON.stringify(availableConditions) !== JSON.stringify(this.CACHE.availableConditions) ||\n      JSON.stringify(conditions) !== JSON.stringify(this.CACHE.conditions)\n    ) {\n      this.CACHE.availableConditions = availableConditions\n      this.CACHE.conditions = conditions\n      this.forceUpdate()\n    }\n  }\n\n  handleCheckbox = (condition, value) => {\n    const { conditions } = this.props.model\n\n    if (value && !conditions.includes(condition)) {\n      conditions.push(condition)\n    } else if (typeof conditions.delete === 'function') {\n      conditions.delete(condition)\n    } else {\n      conditions.splice(conditions.indexOf(condition), 1)\n    }\n    this.forceUpdate()\n  }\n\n  renderCondition = (condition) => {\n    const { conditions } = this.props.model\n    const isCurrent = conditions.includes(condition)\n    return (\n      <div key={condition} className={`condition ${isCurrent ? 'current' : 'available'}`}>\n        <Editable\n          className=\"current\"\n          onChange={value => this.handleCheckbox(condition, value)}\n          value={isCurrent}\n        />\n        <div className=\"name\">{condition}</div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"conditions\">\n        <Expandable>\n          {this.props.model.availableConditions().map(this.renderCondition)}\n        </Expandable>\n      </div>\n    )\n  }\n})\n","import { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Expandable from '@/components/Expandable'\nimport noop from '@/utilities/noop'\nimport './Layout.scss'\n\nexport default class Layout extends Component {\n  titleBar = React.createRef()\n\n  onSnapshotDisposer = noop\n  snapshot = null\n\n  componentDidMount() {\n    this.onSnapshotDisposer = onSnapshot(this.props.model, (snapshot) => {\n      const snapshotJSON = JSON.stringify(snapshot)\n      if (this.snapshot !== snapshotJSON) {\n        this.snapshot = snapshotJSON\n        this.forceUpdate()\n      }\n    })\n    this.forceUpdate() // Immediate redraw to place buttonParent\n  }\n  componentWillUnmount() { this.onSnapshotDisposer() }\n\n  handleChangeTitle = title => this.props.model.set({ title })\n\n  render() {\n    const { children, parentColumns } = this.props\n    const { colSpan, title } = this.props.model\n\n    return (\n      <div className=\"layout\" style={{ width: `calc(100%/${parentColumns}*${colSpan})` }}>\n        {title === undefined\n          ? children\n          : <>\n            <div className=\"title-bar\" ref={this.titleBar}>\n              <Editable\n                className=\"title\"\n                onChange={this.handleChangeTitle}\n                placeholder=\"Section Title\"\n                value={title}\n              />\n            </div>\n            <Expandable\n              expandByDefault\n              omitItemWrapper\n              toggleButtonParent={this.titleBar.current}\n            >\n              {children}\n            </Expandable>\n          </>\n        }\n      </div>\n    )\n  }\n}\n","import Attribute from '@/models/Attribute'\nimport Descriptor from '@/models/Descriptor'\nimport Effect from '@/models/Effect'\nimport Item from '@/models/Item'\nimport Resource from '@/models/Resource'\nimport Skill from '@/models/Skill'\nimport Spell from '@/models/Spell'\nimport Trait from '@/models/Trait'\n\nexport default {\n  Attribute,\n  Descriptor,\n  Effect,\n  Item,\n  Resource,\n  Skill,\n  Spell,\n  Trait,\n}\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React from 'react'\nimport components from '@/components'\nimport Conditions from '@/components/Conditions'\nimport Layout from '@/components/Layout'\nimport ListOf from '@/components/List'\nimport models from '@/models'\nimport debounce from '@/utilities/debounce'\nimport noop from '@/utilities/noop'\nimport './Sheet.scss'\n\n@observer class Sheet extends React.Component {\n  static defaultProps = {\n    character: {},\n    layout: {},\n    onChange: noop,\n    onMount: noop,\n  }\n\n  state = { size: 'large' }\n\n  handleWindowResize = debounce(() => {\n    let size = 'large'\n    if (window.matchMedia('(min-width: 5in) and (max-width: 7.5in)').matches) {\n      size = 'medium'\n    } else if (window.matchMedia('(max-width: 5in)').matches) {\n      size = 'small'\n    }\n    if (size !== this.state.size) this.setState({ size })\n  }, 250)\n\n  constructor(props) {\n    super(props)\n    this.onCharacterSnapshotDisposer = onSnapshot(this.props.character, (snapshot) => {\n      this.props.onChange(snapshot, this.props.layout.toJSON(), this)\n    })\n    this.onLayoutSnapshotDisposer = onSnapshot(this.props.layout, (snapshot) => {\n      this.props.onChange(this.props.character.toJSON(), snapshot, this)\n    })\n  }\n\n  componentDidMount() {\n    this.handleWindowResize()\n    window.addEventListener('resize', this.handleWindowResize)\n    this.props.onMount(this)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize)\n    this.onCharacterSnapshotDisposer()\n    this.onLayoutSnapshotDisposer()\n  }\n\n\n  renderComponent = (parent, model, key) => {\n    if (model.type) {\n      const { title } = model\n      const typename = model.type.toLowerCase()\n      const List = ListOf(\n        models[model.type],\n        components[model.type],\n        { className: `${typename}-list` }\n      )\n      const collection = this.props.character[`${typename}s`]\n      return (\n        <List {...{ key, layout: model, title }} collection={collection} columns={model.columns} />\n      )\n    }\n\n    return (\n      <Layout key={model.hash} model={model} parentColumns={parent.columns}>\n        {model.children.map((child, i) => this.renderComponent(model, child, i))}\n      </Layout>\n    )\n  }\n\n  render() {\n    const { character, layout } = this.props\n    const { size } = this.state\n\n    return (\n      <div className={`sheetforge sheet ${size}`}>\n        <Conditions model={character} />\n        {layout.children.map(this.renderComponent.bind(null, layout))}\n      </div>\n    )\n  }\n}\n\nexport default Sheet\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Rating from '@/components/Rating'\nimport noop from '@/utilities/noop'\nimport './Resource.scss'\n\n@observer class Resource extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }]\n\n  handleChangeCurrent = current => this.props.model.set({ current })\n  handleChangeMaximum = maximum => this.props.model.set({ maximum })\n  handleChangeName = name => this.props.model.set({ name })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n\n  render() {\n    const { current, name, maximum } = this.props.model\n\n    return (\n      <div className=\"resource\">\n        <div className=\"display\">\n          <Editable\n            className=\"name\"\n            onChange={this.handleChangeName}\n            onEditEnd={this.handleCommitName}\n            value={name}\n          />\n          <Editable\n            className=\"current\"\n            max={999}\n            min={0}\n            onChange={this.handleChangeCurrent}\n            value={current}\n          />\n          {'of'}\n          <Editable\n            className=\"maximum\"\n            max={999}\n            min={0}\n            onChange={this.handleChangeMaximum}\n            value={maximum}\n          />\n        </div>\n        <Rating\n          allowExcess\n          current={current}\n          maximum={maximum}\n          onChange={this.handleChangeCurrent}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Resource\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport Character from '@/models/Character'\nimport Layout from '@/models/Layout'\nimport Sheet from '@/components/Sheet'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"character-sheet\"}}>{`Character Sheet`}</MDXTag>\n<Sheet\n  layout={Layout.create({\n    children: [\n      { title: 'Descriptors', children: [{ columns: 3, type: 'Descriptor' }] },\n      { title: 'Attributes', children: [{ columns: 4, type: 'Attribute' }] },\n      { columns: 3, children: [\n        { colSpan: 1, children: [\n          { title: 'Traits', children: [{ type: 'Trait' }] },\n          { title: 'Resources', children: [{ type: 'Resource' }] },\n        ] },\n        { colSpan: 2, children: [\n          { title: 'Skills', children: [{ columns: 2, type: 'Skill' }] },\n          { title: 'Items', children: [{ columns: 1, type: 'Item' }] },\n          { title: 'Spells', children: [{ columns: 1, type: 'Spell' }] },\n        ] },\n      ] },\n    ]\n  })}\n  character={Character.create({})}\n  onChange={(character, layout) => {\n    localStorage.setItem('sf-example', JSON.stringify({ character, layout }))\n  }}\n  onMount={(self) => {\n    const saved = localStorage.getItem('sf-example')\n    if (saved) {\n      const example = JSON.parse(saved)\n      self.props.character.set(example.character)\n      self.props.layout.set(example.layout)\n    }\n  }}\n/>\n           </MDXTag>\n  }\n}\n  ","import { types } from 'mobx-state-tree'\n\nexport default (min, max, defaultTo = min) => (\n  types.optional(\n    types.refinement(\n      types.number,\n      n => n === undefined || (n >= min && n <= max)\n    ),\n    defaultTo\n  )\n)\n","import { types } from 'mobx-state-tree'\nimport CollectionOf from '@/models/generic/Collection'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport between from '@/models/types/between'\n\nconst Layout = types.compose(\n  IIdentity,\n  IEditable,\n  types.model({\n    categorize: false,\n    children: CollectionOf(types.late(() => Layout)),\n    colSpan: between(1, 4, 1),\n    columns: between(1, 4, 1),\n    filter: types.maybe(types.string),\n    sortOption: types.maybe(types.number),\n    title: types.union(types.maybe(types.string), types.literal(false)),\n    type: types.maybe(types.string),\n  })\n).named('Layout')\n\nexport default Layout\n"],"sourceRoot":""}