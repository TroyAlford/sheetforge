{"version":3,"sources":["webpack://sheetforge/./source/models/Descriptor/Descriptor.js","webpack://sheetforge/./source/models/Item/Item.js","webpack://sheetforge/./source/utilities/unique.js","webpack://sheetforge/./source/utilities/findParent.js","webpack://sheetforge/./source/models/Effect/Effect.js","webpack://sheetforge/./source/models/Character/Character.js","webpack://sheetforge/./source/utilities/flatten.js","webpack://sheetforge/./source/models/ResourceCost/ResourceCost.js","webpack://sheetforge/./source/models/Spell/Spell.js","webpack://sheetforge/./source/components/Editable/Editable.js","webpack://sheetforge/./source/utilities/splitObjectPath.js","webpack://sheetforge/./source/utilities/getPathValue.js","webpack://sheetforge/./source/models/generic/IEditable/IEditable.js","webpack://sheetforge/./source/utilities/setPathValue.js","webpack://sheetforge/./source/models/generic/Collection/Collection.js","webpack://sheetforge/./source/utilities/compareBy.js","webpack://sheetforge/./source/models/Resource/Resource.js","webpack://sheetforge/./source/models/Trait/Trait.js","webpack://sheetforge/./source/utilities/bound.js","webpack://sheetforge/./source/utilities/hash.js","webpack://sheetforge/./source/models/generic/IIdentity/IIdentity.js","webpack://sheetforge/./source/utilities/math/math.js","webpack://sheetforge/./source/utilities/math/toSymbols.js","webpack://sheetforge/./source/models/Attribute/Attribute.js","webpack://sheetforge/./source/utilities/math/calculate.js","webpack://sheetforge/./source/models/generic/ICategorizable/ICategorizable.js","webpack://sheetforge/./source/models/Skill/Skill.js","webpack://sheetforge/./source/utilities/noop.js"],"names":["mobx_state_tree__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_models_generic_ICategorizable__WEBPACK_IMPORTED_MODULE_1__","_models_generic_IEditable__WEBPACK_IMPORTED_MODULE_2__","_models_generic_IIdentity__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","compose","ICategorizable","model","name","value","named","_models_Effect__WEBPACK_IMPORTED_MODULE_1__","_models_generic_Collection__WEBPACK_IMPORTED_MODULE_2__","_models_generic_ICategorizable__WEBPACK_IMPORTED_MODULE_3__","_models_generic_IEditable__WEBPACK_IMPORTED_MODULE_4__","_models_generic_IIdentity__WEBPACK_IMPORTED_MODULE_5__","description","effects","CollectionOf","equipped","arguments","length","undefined","filter","item","index","all","child","filterFunction","Boolean","hasParent","parent","getParent","_models_Attribute__WEBPACK_IMPORTED_MODULE_1__","_models_generic_IEditable__WEBPACK_IMPORTED_MODULE_3__","_models_generic_IIdentity__WEBPACK_IMPORTED_MODULE_4__","_utilities_findParent__WEBPACK_IMPORTED_MODULE_5__","condition","modifier","targetId","actions","self","afterAttach","available","character","attributes","findParent","p","isCharacter","isApplicable","source","Object","sourceName","target","mobx_state_tree","IIdentity","IEditable","Attribute","conditions","types","string","descriptors","Descriptor","experience","items","Item","resources","Resource","skills","Skill","spells","Spell","traits","Trait","volatile","activeEffects","effect","availableConditions","map","e","concat","asArray","sort","i","flatten","array","depth","Infinity","Array","TypeError","JSON","reduce","next","trait","values","spell","isActive","_models_generic_Collection__WEBPACK_IMPORTED_MODULE_1__","_models_Resource__WEBPACK_IMPORTED_MODULE_4__","amount","resourceName","views","resource","_models_ResourceCost__WEBPACK_IMPORTED_MODULE_6__","_utilities_findParent__WEBPACK_IMPORTED_MODULE_7__","level","costs","cast","isAffordable","cost","current","every","TYPES","Editable","editing","resetValue","_this","props","type","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","includes","onChange","state","handleToggleEditing","editor","editorType","getEditorType","focus","forceEditMode","setSelectionRange","_ref","_this$props","min","max","parseFloat","Number","bound","event","key","ctrlKey","metaKey","onKeyDown","_utilities_noop__WEBPACK_IMPORTED_MODULE_11__","isDefaultPrevented","resetChanges","readOnly","setState","onEditStart","onEditEnd","select","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","checked","disabled","toggleBoolean","ref","createRefWithAutoFocus","paragraphs","placeholder","split","line","className","join","trim","onClick","onBlur","handleChange","onFocus","selectOnFocus","handleKeys","onKeyPress","onKeyUp","rows","step","renderStatic","_this$props2","readOnlyValue","showPlaceholder","displayValue","renderBoolean","renderSlider","renderMultiline","renderNumber","renderText","_this$props3","classes","handleReceivingFocus","tabIndex","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","renderEditor","this","React","Component","PATH_SPLITTER","splitObjectPath","path","getPathValue","object","property","pop","o","isIEditable","savedVersion","isDirty","deepEqual","toJSON","afterCreate","isPathDirty","initial","markAsClean","isObservableArray","reset","set","setPathValue","typeof_default","TYPE","options","TypedArrayWrapper","slice","first","last","at","n","clear","delete","deleteAt","_","fn","find","findBy","findById","id","identifierAttribute","forEach","searchElement","fromIndex","indexOf","element","insert","push","_len","_key","replace","shift","start","end","some","sortBy","direction","prop","reversed","objectA","objectB","String","b","compareBy","splice","deleteCount","toObject","keyProp","valueProp","entry","objectSpread_default","defineProperty_default","unshift","_len2","_key2","postProcessSnapshot","custom","fromSnapshot","snapshot","create","getValidationMessage","f","isTargetType","maximum","randomHash","radix","h","char","Math","hash","toString","mathjs_core__WEBPACK_IMPORTED_MODULE_0__","math","core","require","toSymbols","expression","fns","symbols","node","modifiedValue","raw","isComputed","computing","sum","modifierText","computed","symbol","attribute","data","defaultSymbolValue","safeData","calculate","error","process","preProcessSnapshot","objectWithoutProperties_default","_ref2","_utilities_noop__WEBPACK_IMPORTED_MODULE_1__","_utilities_unique__WEBPACK_IMPORTED_MODULE_2__","getValue","isICategorizable","getCategories","categories","unique","category","lastUsedName","categoryValue","mastery","theory","isComplex","isSimple"],"mappings":"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","file":"static/js/components-attribute-attribute~components-effect-effect~components-item-item~components-sheet-sheet~~4405149b.e1ec7d59.js","sourcesContent":["import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(),\n  IEditable,\n  types.model({\n    name: 'New Descriptor...',\n    value: '',\n  })\n).named('Descriptor')\n","import { types } from 'mobx-state-tree'\nimport Effect from '@/models/Effect'\nimport CollectionOf from '@/models/generic/Collection'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(),\n  IEditable,\n  types.model({\n    description: '',\n    effects: CollectionOf(Effect),\n    equipped: false,\n    name: 'New Item...',\n  }),\n).named('Item')\n","export default (array = []) => (\n  array.filter((item, index, all) => all.indexOf(item) === index)\n)\n","import { getParent, hasParent } from 'mobx-state-tree'\n\nexport default (child, filterFunction = Boolean) => {\n  if (!hasParent(child)) { return null }\n\n  let parent = getParent(child)\n  while (parent) {\n    if (filterFunction(parent)) {\n      return parent\n    }\n\n    if (!hasParent(parent)) { return null }\n    parent = getParent(parent)\n  }\n\n  return null\n}\n","import { types } from 'mobx-state-tree'\nimport Attribute from '@/models/Attribute'\nimport CollectionOf from '@/models/generic/Collection'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport findParent from '@/utilities/findParent'\n\nexport default types.compose(\n  IIdentity,\n  IEditable,\n  types.model({\n    condition: '',\n    modifier: 0,\n    targetId: '',\n  }).actions(self => ({\n    afterAttach() {\n      if (!self.targetId && self.available().length) {\n        // eslint-disable-next-line no-param-reassign\n        self.targetId = self.available().first.id\n      }\n    },\n\n    available() {\n      const character = self.character()\n      return character ? character.attributes : CollectionOf(Attribute).create([])\n    },\n    character() { return findParent(self, p => p.isCharacter) },\n    isApplicable() {\n      const character = self.character()\n      return Boolean(\n        !self.condition ||\n        (character && character.conditions.includes(self.condition))\n      )\n    },\n    source() { return findParent(self, p => p.name) || null },\n    sourceName() { return self.source() ? self.source().name : 'Unknown' },\n    target() {\n      const character = self.character()\n      return character ? character.attributes.findBy('name', self.targetId) : null\n    },\n  }))\n).named('Effect')\n","import { types } from 'mobx-state-tree'\nimport Attribute from '@/models/Attribute'\nimport Descriptor from '@/models/Descriptor'\nimport CollectionOf from '@/models/generic/Collection'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport Item from '@/models/Item'\nimport Resource from '@/models/Resource'\nimport Skill from '@/models/Skill'\nimport Spell from '@/models/Spell'\nimport Trait from '@/models/Trait'\nimport flatten from '@/utilities/flatten'\n\nexport default types.compose(\n  IIdentity,\n  IEditable,\n  types.model({\n    attributes: CollectionOf(Attribute),\n    conditions: CollectionOf(types.string), // ['vs Goblins', 'Crinos Form']\n    descriptors: CollectionOf(Descriptor),\n    experience: 0,\n    items: CollectionOf(Item), // equipped / unequipped, have Effects\n    resources: CollectionOf(Resource),\n    skills: CollectionOf(Skill),\n    spells: CollectionOf(Spell),\n    traits: CollectionOf(Trait), // have Effects\n  }).volatile(() => ({\n    isCharacter: true,\n  })).actions(self => ({\n    activeEffects() {\n      return self.effects().filter(effect => effect && effect.isApplicable())\n    },\n    availableConditions() {\n      return self.effects()\n        .map(e => e.condition).concat(self.conditions.asArray)\n        .sort()\n        .filter((effect, i, all) => !i || effect !== all[i - 1])\n        .filter(Boolean)\n    },\n    effects() {\n      return flatten([\n        // Trait Effects first, because they're inherent\n        self.traits.filter(Boolean).map(trait => trait.effects.values),\n        // Direct Effects second, because they're cast on the character\n        self.spells.filter(spell => spell.isActive).map(spell => spell.effects.values),\n        // Item Effects third, because they're indirect\n        self.items.filter(item => item.equipped).map(item => item.effects.values),\n      ]).filter(Boolean)\n    },\n  }))\n).named('Character')\n","export default function flatten(array, depth = Infinity) {\n  if (!array || !Array.isArray(array)) {\n    throw new TypeError(`cannot flatten non-Array value ${JSON.stringify(array)}`)\n  }\n\n  return array.reduce((all, next) => {\n    if (depth > 1 && next && Array.isArray(next)) {\n      return all.concat(flatten(next, depth - 1))\n    }\n\n    return all.concat(next)\n  }, [])\n}\n","import { types } from 'mobx-state-tree'\nimport CollectionOf from '@/models/generic/Collection'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport Resource from '@/models/Resource'\nimport findParent from '@/utilities/findParent'\n\nexport default types.compose(\n  IIdentity,\n  IEditable,\n  types.model({\n    amount: 0,\n    resourceName: '',\n  }).views(self => ({\n    get available() {\n      return self.character ? self.character.resources : CollectionOf(Resource).create([])\n    },\n    get character() { return findParent(self, p => p.isCharacter) },\n  })).actions(self => ({\n    afterAttach() {\n      if (!self.resourceName && self.available.length) {\n        // eslint-disable-next-line no-param-reassign\n        self.resourceName = self.available.first.name\n      }\n    },\n    resource() {\n      if (!self.character) return null\n      return self.character.resources.findBy('name', self.resourceName)\n    },\n  }))\n).named('Cost')\n","import { types } from 'mobx-state-tree'\nimport Effect from '@/models/Effect'\nimport CollectionOf from '@/models/generic/Collection'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport ResourceCost from '@/models/ResourceCost'\nimport findParent from '@/utilities/findParent'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(self => self.level),\n  IEditable,\n  types.model({\n    costs: CollectionOf(ResourceCost), // Resources\n    description: '',\n    effects: CollectionOf(Effect),\n    isActive: false,\n    level: 0,\n    name: 'New Spell...',\n  }).views(self => ({\n    get character() { return findParent(self, p => p.isCharacter) },\n  })).actions(self => ({\n    cast() {\n      if (self.isAffordable()) {\n        self.costs.forEach((cost) => {\n          const resource = cost.resource()\n          resource.set({ current: resource.current - cost.amount })\n        })\n      }\n    },\n    isAffordable() {\n      if (!self.character || !self.costs.length) return true\n      return self.costs.every(cost => (\n        cost.resource() && cost.resource().current >= cost.amount\n      ))\n    },\n  }))\n).named('Spell')\n","import React from 'react'\nimport bound from '@/utilities/bound'\nimport noop from '@/utilities/noop'\nimport './Editable.scss'\n\nconst TYPES = [\n  // Strings\n  'text', 'multiline',\n  // Checkboxes\n  'boolean',\n  // Numbers\n  'number', 'slider',\n]\n\nexport default class Editable extends React.Component {\n  static displayName = 'Editable'\n\n  static defaultProps = {\n    className: '',\n    forceEditMode: false,\n    max: undefined,\n    min: undefined,\n    onChange: noop,\n    onEditEnd: noop,\n    onEditStart: noop,\n    onKeyDown: noop,\n    onKeyPress: noop,\n    onKeyUp: noop,\n    placeholder: '',\n    readOnly: false,\n    readOnlyValue: undefined,\n    step: 1,\n    type: undefined,\n    value: '',\n  }\n\n  state = {\n    editing: false,\n    resetValue: this.props.value,\n  }\n\n  get editing() {\n    return this.props.forceEditMode || this.state.editing\n  }\n\n  getEditorType = () => {\n    const { value } = this.props\n    let { type } = this.props\n\n    if (type !== undefined && TYPES.includes(type)) { return type }\n\n    type = typeof value\n    if (type === 'string') { return value.includes('\\n') ? 'multiline' : 'text' }\n    if (['boolean', 'number'].includes(type)) { return type }\n\n    return 'text'\n  }\n\n  resetChanges = () => {\n    this.props.onChange(this.state.resetValue, this.props.value)\n    this.handleToggleEditing()\n  }\n\n  createRefWithAutoFocus = (editor) => {\n    if (!editor) { return }\n    this.editor = editor\n\n    const editorType = this.getEditorType()\n    if (editorType !== 'boolean' && typeof editor.focus === 'function') { editor.focus() }\n\n    if (['boolean', 'number'].includes(this.getEditorType())) { return }\n    if (this.props.forceEditMode && typeof editor.setSelectionRange === 'function') {\n      editor.setSelectionRange(editor.value.length, editor.value.length)\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { min, max } = this.props\n    let { value } = target\n\n    // eslint-disable-next-line default-case\n    switch (this.getEditorType()) {\n      case 'slider':\n      case 'number':\n        value = parseFloat(value || 0)\n        // eslint-disable-next-line prefer-destructuring\n        if (Number.isNaN(value)) { value = this.props.value }\n        value = bound(value, { max, min })\n    }\n    this.props.onChange(value, this.state.resetValue)\n  }\n\n  handleKeys = (event) => {\n    const { target, key, ctrlKey, metaKey } = event\n\n    if (this.props.onKeyDown !== noop) {\n      this.props.onKeyDown(event)\n      if (event.isDefaultPrevented()) return\n    }\n\n    if (key === 'Escape') { this.resetChanges() }\n    if (key === 'Enter') {\n      if (target.nodeName !== 'TEXTAREA' || ctrlKey || metaKey) {\n        this.handleToggleEditing()\n      }\n    }\n  }\n\n  handleReceivingFocus = () => {\n    if (this.props.readOnly) { return }\n    if (!this.state.editing) { this.handleToggleEditing() }\n  }\n\n  handleToggleEditing = () => {\n    if (this.props.readOnly) { return }\n\n    const editing = !this.editing\n\n    this.setState({ editing, resetValue: this.props.value }, () => {\n      if (this.state.editing) {\n        this.props.onEditStart()\n      } else {\n        this.props.onEditEnd()\n      }\n    })\n  }\n\n  selectOnFocus = event => event.target.select()\n\n  toggleBoolean = () => {\n    this.props.onEditStart()\n    this.props.onChange(!this.props.value, this.props.value)\n    this.props.onEditEnd()\n  }\n\n  renderBoolean = () => (\n    <input\n      type=\"checkbox\"\n      checked={Boolean(this.props.value)}\n      disabled={this.props.readOnly}\n      onChange={this.toggleBoolean}\n      ref={this.createRefWithAutoFocus}\n    />\n  )\n\n  renderMultiline = () => {\n    if (!this.editing) {\n      const lines = (this.props.value || this.props.placeholder).split('\\n')\n      const paragraphs = lines.map((line, index) => <p key={index}>{line}</p>\n      )\n      const className = ['multiline', this.props.value ? '' : 'placeholder'].join(' ').trim()\n      return <div className={className} onClick={this.handleToggleEditing}>{paragraphs}</div>\n    }\n\n    return (\n      <textarea\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        rows={this.props.value.split('\\n').length}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderNumber = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"number\"\n        disabled={this.props.readOnly}\n        max={this.props.max}\n        min={this.props.min}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        step={this.props.step}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderSlider = () => (\n    <input\n      type=\"range\"\n      disabled={this.props.readOnly}\n      max={this.props.max}\n      min={this.props.min}\n      onBlur={this.handleToggleEditing}\n      onChange={this.handleChange}\n      onKeyDown={this.props.onKeyDown}\n      onKeyPress={this.props.onKeyPress}\n      onKeyUp={this.props.onKeyUp}\n      ref={this.createRefWithAutoFocus}\n      step={this.props.step}\n      value={this.props.value}\n    />\n  )\n\n  renderText = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"text\"\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderStatic = () => {\n    const { placeholder, readOnlyValue, value } = this.props\n    const showPlaceholder = placeholder && !value\n    const displayValue = readOnlyValue !== undefined ? readOnlyValue : value\n    const className = showPlaceholder ? 'placeholder' : ''\n    return (\n      <span className={className} onClick={this.handleToggleEditing}>\n        {showPlaceholder ? placeholder : displayValue}\n      </span>\n    )\n  }\n\n  renderEditor = () => {\n    switch (this.getEditorType()) {\n      case 'boolean':\n        return this.renderBoolean()\n      case 'slider':\n        return this.renderSlider()\n      case 'multiline':\n        return this.renderMultiline()\n      case 'number':\n        return this.renderNumber()\n      default:\n        return this.renderText()\n    }\n  }\n\n  render = () => {\n    const { className, readOnly } = this.props\n\n    const classes = [\n      'editable',\n      this.editing ? 'editing' : '',\n      className || '',\n      readOnly ? 'readonly' : '',\n    ].filter(Boolean)\n\n    let props = {}\n    if (!readOnly && !this.editing) {\n      props = { onFocus: this.handleReceivingFocus, tabIndex: '0' }\n    }\n\n    return (\n      <div className={classes.join(' ')} {...props}>\n        {this.renderEditor()}\n      </div>\n    )\n  }\n}\n","const PATH_SPLITTER = /([a-z0-9-_]+)(?![[\"'\\].])*/ig\n\nexport default (path) => {\n  if (typeof path !== 'string') return null\n  return path.match(PATH_SPLITTER)\n}\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path) => {\n  if (typeof path !== 'string') return undefined\n\n  const split = splitObjectPath(path)\n\n  if (!Array.isArray(split)) return undefined\n\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target) return target[property]\n  return undefined\n}\n","import deepEqual from 'deep-equal'\nimport { isObservableArray } from 'mobx'\nimport { types } from 'mobx-state-tree'\nimport getPathValue from '@/utilities/getPathValue'\nimport setPathValue from '@/utilities/setPathValue'\n\nconst IEditable = types.model('IEditable', {\n  // Any\n}).volatile(() => ({\n  isIEditable: true,\n  savedVersion: {},\n})).views(self => ({\n  get isDirty() { return !deepEqual(self.toJSON(), self.savedVersion) },\n})).actions(self => ({\n  /* eslint-disable no-param-reassign */\n\n  afterCreate() { self.savedVersion = self.toJSON() },\n  isPathDirty: (path) => {\n    const current = getPathValue(self.toJSON(), path)\n    const initial = getPathValue(self.savedVersion, path)\n    return !deepEqual(current, initial)\n  },\n  markAsClean() {\n    self.savedVersion = self.toJSON()\n\n    Object.keys(self.savedVersion).forEach((key) => {\n      const value = self[key]\n      if (!value) { return }\n\n      if (value.isIEditable) {\n        value.markAsClean()\n      } else if (isObservableArray(value)) {\n        value.forEach(child => (child && child.isIEditable && child.markAsClean()))\n      }\n    })\n  },\n  reset() { Object.assign(self, self.savedVersion) },\n  set(key = {}, value = undefined) {\n    if (typeof key === 'string' && value !== undefined) {\n      // allows: model.set('foo.bar', 'bar')\n      if (self[key] !== undefined) {\n        self[key] = value\n      } else {\n        setPathValue(self, key, value)\n      }\n    } else if (typeof key === 'object' && value === undefined) {\n      // allows: model.set({ foo: 'Foo', bar: 'Bar' })\n      Object.assign(self, key)\n    }\n  },\n\n  /* eslint-enable no-param-reassign */\n}))\n\nexport default IEditable\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path, value) => {\n  const split = splitObjectPath(path)\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target && target.isIEditable) {\n    target.set(property, value)\n  } else {\n    target[property] = value\n  }\n}\n","import { isObservableArray } from 'mobx'\nimport { types } from 'mobx-state-tree'\nimport compareBy from '@/utilities/compareBy'\n\nexport default (TYPE, options = {}) => {\n  const TypedArrayWrapper = types.model({\n    values: types.array(TYPE),\n  }).views(self => ({\n    get asArray() { return self.values.slice() },\n    get first() { return self.length ? self.at(0) : undefined },\n    get last() { return self.length ? self.at(self.length - 1) : undefined },\n    get length() { return self.values.length },\n  })).actions(self => ({\n    /* eslint-disable no-param-reassign */\n\n    at: n => self.values[n],\n    clear: () => self.values.clear(),\n    delete: (object) => { self.values.replace(self.values.filter(item => item !== object)) },\n    deleteAt: (index) => { self.values.replace(self.values.filter((_, n) => n !== index)) },\n    every: fn => self.values.every(fn),\n    filter: fn => self.values.filter(fn),\n    find: fn => self.values.find(fn),\n    findBy: (key, value) => self.find(item => item[key] === value),\n    findById: (id) => {\n      if (!TYPE.identifierAttribute) return null\n      return self.find(item => item[TYPE.identifierAttribute] === id) || null\n    },\n    forEach: fn => self.values.forEach(fn),\n    includes: (searchElement, fromIndex) => self.values.includes(searchElement, fromIndex),\n    indexOf: element => self.values.indexOf(element),\n    insert: (object, index) => self.splice(index, 0, object),\n    map: fn => self.values.map(fn),\n    pop: () => self.values.pop(),\n    push: (...values) => self.values.replace([].concat(self.values, values)),\n    reduce: (fn, initial) => self.values.reduce(fn, initial),\n    replace: values => self.values.replace(values),\n    shift: () => self.values.shift(),\n    slice: (start, end) => self.values.slice(start, end),\n    some: fn => self.values.some(fn),\n    sortBy: (property, direction = 'asc') => {\n      if (!['asc', 'desc'].includes(direction)) {\n        throw new TypeError(`direction must be \"asc\" or \"desc\", got: \"${direction}\"`)\n      }\n      const values = self.values.slice().sort(compareBy(property))\n      self.values.replace(direction === 'desc' ? values.reverse() : values)\n      return self\n    },\n    splice: (index, deleteCount, value) => self.values.splice(index, deleteCount, value),\n    toObject: (keyProp, valueProp) => self.values.reduce((object, entry) => {\n      const key = entry[keyProp]\n      const value = valueProp !== undefined ? entry[valueProp] : entry\n      return { ...object, [key]: typeof value === 'function' ? value() : value }\n    }, {}),\n    unshift: (...values) => self.values.replace([].concat(values, self.values)),\n\n    /* eslint-enable no-param-reassign */\n  })).postProcessSnapshot(({ values }) => values)\n\n  return types.custom({\n    ...options,\n    fromSnapshot: (snapshot = []) => TypedArrayWrapper.create({ values: snapshot }),\n    getValidationMessage: (snapshot) => {\n      if (!snapshot) return ''\n      if (isObservableArray(snapshot) || Array.isArray(snapshot)) {\n        if (snapshot.every(f => TYPE.is(f))) return ''\n      }\n\n      return 'Collection types must be assigned an array of values or null'\n    },\n    isTargetType: target => TypedArrayWrapper.is(target),\n    name: options.name || 'Collection',\n  })\n}\n","export default (prop, reversed = false) => (objectA, objectB) => {\n  const a = String(objectA instanceof Map ? objectA.get(prop) : objectA[prop])\n  const b = String(objectB instanceof Map ? objectB.get(prop) : objectB[prop])\n\n  if (reversed) return b.localeCompare(a)\n  return a.localeCompare(b)\n}\n","import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(),\n  IEditable,\n  types.model({\n    current: 0,\n    maximum: 10,\n    name: 'New Resource...',\n  })\n).named('Resource')\n","import { types } from 'mobx-state-tree'\nimport Effect from '@/models/Effect'\nimport CollectionOf from '@/models/generic/Collection'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(self => self.value),\n  IEditable,\n  types.model('Trait', {\n    effects: CollectionOf(Effect),\n    name: 'New Trait...',\n    value: 0,\n  })\n).named('Trait')\n","export default (value, { min, max }) => {\n  if (min !== undefined && value < min) return min\n  if (max !== undefined && value > max) return max\n  return value\n}\n","export default function hash(value = '', radix = 16) {\n  const string = String(value)\n  let h = 0\n  string.split('').forEach((char) => {\n    /* eslint-disable no-bitwise */\n    h = ((h << 5) - h) + char.charCodeAt(0)\n    h &= h // Convert to 32-bit integer\n    /* eslint-enable no-bitwise */\n  })\n  return Math.abs(h).toString(radix)\n}\n\nexport const randomHash = () => hash(Math.random().toString())\n","import { types } from 'mobx-state-tree'\nimport { randomHash } from '@/utilities/hash'\n\nexport default types.model({\n  // Nothing\n}).volatile(() => ({\n  hash: '',\n})).actions(self => ({\n  afterCreate() { self.hash = randomHash() }, // eslint-disable-line no-param-reassign\n}))\n","import core from 'mathjs/core'\n\nconst math = core.create()\nmath.import(require('mathjs/lib/expression/function/eval'))\nmath.import(require('mathjs/lib/expression/function/parse'))\nmath.import(require('mathjs/lib/function/arithmetic/add'))\nmath.import(require('mathjs/lib/function/arithmetic/ceil'))\nmath.import(require('mathjs/lib/function/arithmetic/divide'))\nmath.import(require('mathjs/lib/function/arithmetic/floor'))\nmath.import(require('mathjs/lib/function/arithmetic/mod'))\nmath.import(require('mathjs/lib/function/arithmetic/multiply'))\nmath.import(require('mathjs/lib/function/arithmetic/pow'))\nmath.import(require('mathjs/lib/function/arithmetic/round'))\nmath.import(require('mathjs/lib/function/arithmetic/subtract'))\nmath.import(require('mathjs/lib/function/logical'))\nmath.import(require('mathjs/lib/function/statistics/max'))\nmath.import(require('mathjs/lib/function/statistics/mean'))\nmath.import(require('mathjs/lib/function/statistics/min'))\nmath.import(require('mathjs/lib/function/statistics/sum'))\nmath.import(require('mathjs/lib/type/matrix/function/matrix'))\nmath.import(require('mathjs/lib/type/matrix/Matrix'))\nmath.import(require('mathjs/lib/type/matrix/DenseMatrix'))\n\nexport default math\n","import math from '@/utilities/math'\n\nexport default (expression) => {\n  const fns = []\n  const symbols = []\n\n  math.parse(expression).traverse((node) => {\n    if (node.fn) {\n      fns.push(node.fn.name)\n    }\n    if (\n      node.type === 'SymbolNode'\n      && !symbols.includes(node.name)\n      && !fns.includes(node.name)\n    ) {\n      symbols.push(node.name)\n    }\n  })\n  return symbols\n}\n","import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\nimport findParent from '@/utilities/findParent'\nimport math from '@/utilities/math'\nimport calculate from '@/utilities/math/calculate'\nimport toSymbols from '@/utilities/math/toSymbols'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(self => self.modifiedValue()),\n  IEditable,\n  types.model({\n    name: 'New Attribute...',\n    raw: types.optional(types.union(types.number, types.string), 0),\n  }).views(self => ({\n    get character() { return findParent(self, p => p.isCharacter) },\n    get id() {\n      return self.name.split(':').pop()\n        .trim().toLowerCase()\n        .replace(/[^a-z0-9]/ig, '')\n    },\n    get isComputed() { return typeof self.raw === 'string' },\n  })).actions((self) => {\n    let computing = false\n\n    return ({\n      effects() {\n        if (!self.character) return []\n        return self.character.activeEffects().filter(effect => effect.targetId === self.id)\n      },\n      modifiedValue() { return (self.value() || 0) + self.modifier() },\n      modifier() { return math.sum(self.effects().map(effect => effect.modifier)) },\n      modifierText() {\n        return self.effects().map(effect => `${effect.sourceName()}: ${effect.modifier}`).join(', ')\n      },\n      value() {\n        if (!self.isComputed) return self.raw\n        if (self.character === null) return 0\n        if (computing) return 0\n\n        computing = true\n        let computed = 0\n\n        try {\n          const values = toSymbols(self.raw).reduce((all, symbol) => {\n            const attribute = self.character.attributes.findBy('id', symbol)\n            return Object.assign(all, { [symbol]: attribute ? attribute.modifiedValue() : 0 })\n          }, {})\n\n          computed = calculate(self.raw, values)\n        } catch (error) {\n          // eslint-disable-next-line no-undef\n          if (process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(`Error computing: ${self.raw}`)\n          }\n          computed = 0\n        }\n\n        computing = false\n        return computed\n      },\n    })\n  }).preProcessSnapshot(({ value, ...snapshot }) => ({ ...snapshot, raw: value }))\n    .postProcessSnapshot(({ raw, ...snapshot }) => ({ ...snapshot, value: raw }))\n).named('Attribute')\n","import math from '@/utilities/math'\nimport toSymbols from '@/utilities/math/toSymbols'\n\nexport default (expression = '', data = {}, options = { defaultSymbolValue: 0 }) => {\n  const safeData = { ...data }\n  toSymbols(expression).forEach((symbol) => {\n    if (typeof safeData[symbol] !== 'number' || Number.isNaN(safeData[symbol])) {\n      safeData[symbol] = options.defaultSymbolValue\n    }\n  })\n\n  return math.eval(expression, safeData)\n}\n","import { types } from 'mobx-state-tree'\nimport noop from '@/utilities/noop'\nimport unique from '@/utilities/unique'\n\nexport default (getValue = noop) => types.model({\n}).volatile(() => ({\n  isICategorizable: true,\n})).views((self) => {\n  function getCategories() {\n    if (!self.name) return []\n\n    const categories = self.name.split(':')\n    categories.pop() // remove the name\n\n    return unique(categories.map(category => category.trim()).filter(Boolean)).sort()\n  }\n  let lastUsedName = self.name\n  let categories = getCategories()\n\n  return {\n    get categories() {\n      if (!self.name || self.name === lastUsedName) return categories\n\n      lastUsedName = self.name\n      categories = getCategories()\n\n      return categories\n    },\n    get categoryValue() { return getValue(self) },\n  }\n})\n","import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(self => self.mastery),\n  IEditable,\n  types.model({\n    mastery: 1,\n    name: 'New Skill...',\n    theory: 0,\n  }).views(self => ({\n    get isComplex() { return self.theory !== 0 },\n    get isSimple() { return self.theory === 0 },\n  }))\n).named('Skill')\n","export default () => {}\n"],"sourceRoot":""}