{"version":3,"sources":["webpack://sheetforge/./source/components/MultiToggle/MultiToggle.js","webpack://sheetforge/./source/components/ResourceCost/ResourceCost.js","webpack://sheetforge/./source/components/Spell/Spell.js","webpack://sheetforge/./source/components/Expandable/Expandable.js","webpack://sheetforge/./source/components/Effect/Effect.js","webpack://sheetforge/./source/components/List/List.js","webpack://sheetforge/./source/utilities/debounce.js"],"names":["MultiToggle","selected","_ref","target","index","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","children","indexOf","_this","props","options","undefined","onChange","setState","_this2","this","_this$props","className","state","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","concat","trim","map","option","key","onClick","handleOptionClick","display","Component","_utilities_noop__WEBPACK_IMPORTED_MODULE_9__","components_ResourceCost_ResourceCost","observer","amount","model","set","value","resourceName","_this$props$model","available","react_default","handleChangeResource","_ref2","name","Editable","max","min","handleChangeAmount","getter","EffectList","ListOf","Effect_Effect","Effect","ListOfCosts","models_ResourceCost_ResourceCost","Spell","noop","cast","forceUpdate","description","level","onDelete","isActive","resources","character","onResourceSnapshotDisposer","onSnapshot","_this3","costs","effects","hash","isAffordable","handleToggleActive","handleChangeName","onEditEnd","handleCommitName","handleChangeLevel","handleCast","disabled","Expandable","onToggle","expanded","onToggleExpanded","type","handleChangeDescription","placeholder","collection","title","__webpack_exports__","React","classList","expander","current","parentElement","omitItemWrapper","expandByDefault","add","_this$props2","toggleButtonParent","toggleButtonText","toggleState","buttonProps","handleToggle","ref","toggleButton","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","text","react__WEBPACK_IMPORTED_MODULE_8__","createPortal","renderExpanded","_utilities_noop__WEBPACK_IMPORTED_MODULE_10__","condition","modifier","targetId","_this$props$model$con","isApplicable","handleChangeTarget","id","_components_Editable__WEBPACK_IMPORTED_MODULE_9__","handleChangeModifier","handleChangeCondition","NO_CATEGORY","buildSorter","reversed","arguments","length","A","B","b","Array","i","aString","String","bString","Model","_class","_temp","sortOptions","sorter","objectSpread_default","comparitor","_React$Component","List","_getPrototypeOf2","classCallCheck_default","_len","args","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","defineProperty_default","assertThisInitialized_default","createRef","sortOption","items","category","filter","item","includes","push","parseInt","deleteAt","layout","sortBy","clicked","categorize","categories","join","Fragment","extends_default","handleToggleCategorized","handleFilterChange","filterEl","tabIndex","sortable","handleSortChange","data","columns","categoryItems","getCategoryItems","values","categoryValue","Math","toConsumableArray_default","Number","style","renderItem","_this$state","sorted","categorized","data-index","delete","handleToggleExpanded","handleDelete","inherits_default","createClass_default","sortOptionIndex","onLayoutSnapshotDisposer","func","wait","immediate","timeout","callNow","clearTimeout","setTimeout","debounce","Sortable_default","create","container","draggable","handle","onEnd","remove","replace","querySelectorAll","targetIndex","at","onStart","onDataSnapshotDisposer","_this$props2$classNam","_this$props2$layout","asArray","hasCategories","Boolean","listStyle","renderSortWidget","renderCategoryWidget","handleAdd","renderCategory","get","list","reduce","all","next","Object","unique","sort","CollectionOf"],"mappings":"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","file":"static/js/components-sheet-sheet~components-spell-spell.e89a1691.js","sourcesContent":["import React, { Component } from 'react'\nimport noop from '@/utilities/noop'\nimport './MultiToggle.scss'\n\nexport default class MultiToggle extends Component {\n  static defaultProps = {\n    className: '',\n    onChange: noop,\n    options: [],\n    selected: undefined,\n  }\n\n  state = { selected: null }\n\n  handleOptionClick = ({ target }) => {\n    const index = [...target.parentElement.children].indexOf(target)\n    const selected = this.props.options[index]\n\n    if (this.props.selected !== undefined) {\n      this.props.onChange(selected)\n    } else {\n      this.setState({ selected })\n    }\n  }\n\n  render() {\n    const { className, options } = this.props\n    const selected = this.props.selected !== undefined\n      ? this.props.selected\n      : this.state.selected\n\n    return (\n      <div className={`multi-toggle ${className}`.trim()}>\n        {options.map((option, key) => (\n          <div\n            className={`toggle ${option === selected ? 'on' : 'off'}`.trim()}\n            key={key}\n            onClick={this.handleOptionClick}\n          >\n            {option.display}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport './ResourceCost.scss'\n\n@observer class ResourceCost extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.resourceName,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.amount,\n  }]\n\n  handleChangeAmount = amount => this.props.model.set({ amount })\n  handleChangeResource = ({ target: { value } }) => this.props.model.set({ resourceName: value })\n\n  render() {\n    const { amount, available, resourceName } = this.props.model\n\n    return (\n      <div className=\"resource-cost\">\n        <select className=\"resource-id\" value={resourceName} onChange={this.handleChangeResource}>\n          {available.map(({ name }) => (\n            <option key={name} value={name}>{name}</option>\n          ))}\n        </select>\n        <Editable\n          className=\"amount\"\n          max={999}\n          min={-99}\n          onChange={this.handleChangeAmount}\n          value={amount}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ResourceCost\n","import { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport Effect from '@/components/Effect'\nimport Expandable from '@/components/Expandable'\nimport ListOf from '@/components/List'\nimport ResourceCost from '@/components/ResourceCost'\nimport EffectModel from '@/models/Effect'\nimport ResourceCostModel from '@/models/ResourceCost'\nimport noop from '@/utilities/noop'\nimport './Spell.scss'\n\nconst EffectList = ListOf(EffectModel, Effect, { className: 'effect-list' })\n\nconst ListOfCosts = ListOf(ResourceCostModel, ResourceCost, {\n  className: 'resource-cost-list',\n})\n\n@observer class Spell extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n    onToggleExpanded: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => [model.name, model.level],\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => [model.level, model.name],\n  }, {\n    display: 'icon-sort-value-desc',\n    getter: model => [-model.level, model.name],\n  }]\n\n  onResourceSnapshotDisposer = noop\n\n  componentDidMount() {\n    const { resources } = this.props.model.character\n    this.onResourceSnapshotDisposer = onSnapshot(resources, () => this.forceUpdate())\n  }\n  componentWillUnmount() { this.onResourceSnapshotDisposer() }\n\n  handleCast = () => {\n    this.props.model.cast()\n    this.forceUpdate()\n  }\n\n  handleChangeDescription = description => this.props.model.set({ description })\n  handleChangeLevel = level => this.props.model.set({ level })\n  handleChangeName = name => this.props.model.set({ name })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n  handleToggleActive = () => this.props.model.set({ isActive: !this.props.model.isActive })\n\n  render() {\n    const {\n      costs, description, name, effects, hash, isActive, isAffordable, level,\n    } = this.props.model\n\n    return (\n      <div className={`spell ${isActive ? '' : 'in'}active`}>\n        <Editable className=\"is-active\" onChange={this.handleToggleActive} value={isActive} />\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={name}\n        />\n        <Editable\n          className=\"level\"\n          onChange={this.handleChangeLevel}\n          value={level}\n        />\n        <button className=\"cast icon-magic\" onClick={this.handleCast} disabled={!isAffordable()} />\n        <Expandable onToggle={expanded => this.props.onToggleExpanded(hash, expanded)}>\n          <Editable\n            className=\"description\"\n            type=\"multiline\"\n            onChange={this.handleChangeDescription}\n            placeholder=\"Description...\"\n            value={description}\n          />\n          <ListOfCosts collection={costs} title=\"Casting Costs\" />\n          <EffectList collection={effects} title=\"Effects\" />\n        </Expandable>\n      </div>\n    )\n  }\n}\n\nexport default Spell\n","import React, { Component, Fragment } from 'react'\nimport { createPortal } from 'react-dom'\nimport noop from '@/utilities/noop'\nimport './Expandable.scss'\n\nexport default class Expandable extends Component {\n  static defaultProps = {\n    expandByDefault: false,\n    omitItemWrapper: false,\n    onToggle: noop,\n    toggleButtonParent: null,\n    toggleButtonText: '',\n  }\n\n  state = {\n    expanded: false,\n  }\n\n  expander = React.createRef()\n\n  componentWillMount() {\n    this.setState({ expanded: this.props.expandByDefault })\n  }\n  componentDidMount() {\n    this.expander.current.parentElement.classList.add('expandable-wrapper')\n  }\n\n  handleToggle = () => {\n    const { classList } = this.expander.current.parentElement\n    const { expanded } = this.state\n\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    this.setState({ expanded: !expanded }, () => {\n      this.props.onToggle(!expanded)\n      classList[!expanded ? 'add' : 'remove']('expanded')\n    })\n  }\n\n  renderExpanded = () => {\n    const { children, omitItemWrapper } = this.props\n    return omitItemWrapper\n      ? children\n      : <div className=\"expandable\"> {children}</div>\n  }\n\n  render() {\n    const { toggleButtonParent, toggleButtonText } = this.props\n    const toggleState = this.state.expanded ? 'expanded' : 'collapsed'\n    const buttonProps = {\n      className: `expandable-toggle icon-${toggleState}`,\n      onClick: this.handleToggle,\n      ref: this.expander,\n    }\n\n    const toggleButton = <div {...buttonProps} text={toggleButtonText} />\n    return (\n      <Fragment>\n        {toggleButtonParent ? createPortal(toggleButton, toggleButtonParent) : toggleButton}\n        {this.state.expanded && this.renderExpanded()}\n      </Fragment>\n    )\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport './Effect.scss'\n\n@observer class Effect extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => [!model.targetId, model.targetId],\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => [!model.condition, model.modifier],\n  }]\n\n  handleChangeCondition = condition => this.props.model.set({ condition })\n  handleChangeModifier = modifier => this.props.model.set({ modifier })\n  handleChangeTarget = ({ target: { value } }) => this.props.model.set({ targetId: value })\n\n  render() {\n    const { available, condition = '', isApplicable, modifier, targetId } = this.props.model\n\n    return (\n      <div className={`effect ${isApplicable ? 'applicable' : ''}`.trim()}>\n        <select className=\"target\" value={targetId} onChange={this.handleChangeTarget}>\n          {available().map(({ hash, id, name }) => (\n            <option key={hash} value={id}>{name}</option>\n          ))}\n        </select>\n        <Editable\n          className=\"modifier\"\n          max={999}\n          min={-99}\n          onChange={this.handleChangeModifier}\n          value={modifier}\n        />\n        <Editable\n          className=\"condition\"\n          onChange={this.handleChangeCondition}\n          placeholder=\"Any\"\n          value={condition}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Effect\n","import { onSnapshot } from 'mobx-state-tree'\nimport React from 'react'\nimport Sortable from 'sortablejs'\nimport MultiToggle from '@/components/MultiToggle'\nimport CollectionOf from '@/models/generic/Collection'\nimport debounce from '@/utilities/debounce'\nimport noop from '@/utilities/noop'\nimport unique from '@/utilities/unique'\nimport './List.scss'\n\nconst NO_CATEGORY = 'Uncategorized'\n\nconst buildSorter = (getter, reversed = false) => (A, B) => {\n  const a = getter(A)\n  const b = getter(B)\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    for (let i = 0; i < a.length; i += 1) {\n      if (a[i] !== b[i]) {\n        if (reversed) return b[i] < a[i] ? -1 : 1\n        return a[i] < b[i] ? -1 : 1\n      }\n    }\n\n    return 0\n  }\n\n  if (typeof a === 'number' && typeof b === 'number') {\n    if (a === b) return 0\n    if (reversed) return b < a ? -1 : 1\n    return a < b ? -1 : 1\n  }\n\n  const aString = String(a)\n  const bString = String(b)\n\n  if (reversed) return bString.localeCompare(aString)\n  return aString.localeCompare(bString)\n}\n\nexport default (Model, Component, props = {}) => {\n  const sortOptions = (Component.sortOptions || []).map(sorter => ({\n    ...sorter,\n    comparitor: buildSorter(sorter.getter),\n    display: typeof sorter.display === 'string'\n      ? <span className={sorter.display} />\n      : sorter.display,\n  }))\n\n  return class List extends React.Component {\n    static defaultProps = {\n      className: '',\n      collection: CollectionOf(Model).create([]),\n      columns: 1,\n      layout: undefined,\n      sortable: true,\n      title: props.title || '',\n      ...props,\n    }\n\n    Component = Component\n    Model = Model\n\n    container = React.createRef()\n    expandedItems = {}\n    filterEl = React.createRef()\n    onDataSnapshotDisposer = noop\n    onLayoutSnapshotDisposer = noop\n    sortable = null\n    state = {\n      expanded: {},\n      sortOption: null,\n    }\n\n    componentDidMount() {\n      if (this.props.layout) {\n        const { sortOption: sortOptionIndex } = this.props.layout\n        if (sortOptions.length && sortOptionIndex !== undefined) {\n          this.setState({ sortOption: sortOptions[sortOptionIndex] || null })\n        }\n        this.onLayoutSnapshotDisposer = onSnapshot(this.props.layout,\n          debounce(() => this.forceUpdate(), 100, true)\n        )\n      }\n\n      const { sortable } = this.props\n      if (sortable) {\n        this.sortable = Sortable.create(this.container.current, {\n          disabled: !sortable,\n          draggable: '.list-item-wrapper',\n          handle: '.drag-handle',\n          onEnd: () => {\n            this.container.current.classList.remove('dragging')\n            this.props.collection.replace(\n              [...this.container.current.querySelectorAll('.list-item-wrapper')]\n                .map(item => parseInt(item.getAttribute('data-index'), 10))\n                .map(targetIndex => this.props.collection.at(targetIndex))\n            )\n          },\n          onStart: () => this.container.current.classList.add('dragging'),\n        })\n      }\n      this.onDataSnapshotDisposer = onSnapshot(this.props.collection, () => this.forceUpdate())\n    }\n    componentWillReceiveProps() {\n      if (this.sortable) this.sortable.option('disabled', !this.props.sortable)\n    }\n    componentWillUnmount() {\n      this.onDataSnapshotDisposer()\n      this.onLayoutSnapshotDisposer()\n    }\n\n    get categories() {\n      const list = this.props.collection.asArray.reduce((all, next) => (\n        all.concat(next.categories || [])\n      ), [])\n\n\n      if (!list.length) return []\n      return unique(list.filter(item => item !== NO_CATEGORY)).sort().concat(NO_CATEGORY)\n    }\n\n    getCategoryItems = (items, category) => (\n      (category && category !== NO_CATEGORY)\n        ? items.filter(item => (item.categories || []).includes(category))\n        : items.filter(item => (item.categories || []).length === 0)\n    )\n\n    handleAdd = () => {\n      this.props.collection.push(Model.create({}))\n      this.forceUpdate()\n    }\n    handleDelete = ({ target }) => {\n      const index = parseInt(target.parentNode.getAttribute('data-index'), 10)\n      this.props.collection.deleteAt(index)\n      this.forceUpdate()\n    }\n    handleFilterChange = ({ target }) => this.props.layout.set({ filter: target.value })\n    handleSort = () => this.props.collection.sortBy('name')\n    handleSortChange = (clicked) => {\n      const { sortOption: current } = this.state\n      this.setState({ sortOption: current === clicked ? null : clicked }, () => {\n        this.props.layout.set({\n          sortOption: current === clicked ? undefined : sortOptions.indexOf(clicked),\n        })\n      })\n    }\n    handleToggleCategorized = () => {\n      this.props.layout.set({ categorize: !this.props.layout.categorize })\n    }\n    handleToggleExpanded = (hash, expanded) => {\n      this.setState(state => ({\n        ...state,\n        expanded: { ...state.expanded, [hash]: expanded },\n      }))\n    }\n\n    renderCategoryWidget = () => {\n      const { layout } = this.props\n      const { categories } = this\n      if (!categories.length) return null\n\n      const className = [\n        'categorize icon-categorize',\n        layout.categorize ? 'on' : 'off',\n      ].join(' ')\n\n      return <>\n        <div {...{ className }} onClick={this.handleToggleCategorized} />\n        <select\n          className=\"filter\"\n          onChange={this.handleFilterChange}\n          ref={this.filterEl}\n          tabIndex={-1}\n          value={layout.filter}\n        >\n          <option value=\"\">All</option>\n          {categories.map(name => <option key={name} value={name}>{name}</option>)}\n        </select>\n      </>\n    }\n    renderSortWidget = () => {\n      if (!this.props.sortable) return null\n      if (!sortOptions.length) return null\n\n      return (\n        <MultiToggle\n          className=\"sorter\"\n          onChange={this.handleSortChange}\n          options={sortOptions}\n          selected={this.state.sortOption}\n        />\n      )\n    }\n    renderCategory = (category, data) => {\n      const { columns } = this.props\n      const categoryItems = this.getCategoryItems(data, category)\n      if (!categoryItems.length) return null\n\n      const values = categoryItems.map(item => item.categoryValue)\n      const min = Math.min(...values)\n      const max = Math.max(...values)\n\n      return (\n        <div key={category} className=\"category\">\n          <div className=\"details\">\n            <div className=\"title\">Category: {category} ({categoryItems.length})</div>\n            {(!Number.isNaN(min) && !Number.isNaN(max)) && (\n              <div className=\"range\">{min}-{max}</div>\n            )}\n          </div>\n          <div className=\"category-items\" style={{ columns }}>\n            {categoryItems.map(this.renderItem)}\n          </div>\n        </div>\n      )\n    }\n    renderItem = (model) => {\n      const { collection, layout, sortable } = this.props\n      const { expanded, sortOption } = this.state\n      const sorted = sortable && sortOption !== null\n      const categorized = layout && layout.categorize\n\n      return (\n        <div\n          className={`list-item-wrapper ${expanded[model.hash] ? 'expanded' : ''}`.trim()}\n          data-index={collection.indexOf(model)}\n          key={model.hash}\n        >\n          {(!sorted && !categorized) && <div className=\"drag-handle\" />}\n          <Component\n            model={model}\n            onDelete={collection.delete}\n            onToggleExpanded={this.handleToggleExpanded}\n          />\n          <button className=\"icon-remove\" onClick={this.handleDelete} />\n        </div>\n      )\n    }\n\n    render() {\n      const { className = '', columns, layout = {}, title } = this.props\n      const { sortOption } = this.state\n      let { categories } = this\n      let data = this.props.collection.asArray\n      if (sortOption !== null) data = data.sort(sortOption.comparitor)\n\n      const hasCategories = Boolean(categories.length)\n      if (hasCategories && layout.filter) {\n        data = this.getCategoryItems(data, layout.filter)\n        categories = [layout.filter]\n      }\n      const listStyle = {\n        columns: layout.categorize ? 1 : columns,\n      }\n\n      return (\n        <div className={`list ${className}`.trim()} ref={this.container} style={listStyle}>\n          <div className=\"title-bar\">\n            {this.renderSortWidget()}\n            {this.renderCategoryWidget()}\n            <div className=\"text\">{title}</div>\n            <button className=\"add icon-add\" onClick={this.handleAdd} />\n          </div>\n          {(hasCategories && layout.categorize)\n            ? categories.map(category => this.renderCategory(category, data))\n            : data.map(this.renderItem)\n          }\n        </div>\n      )\n    }\n  }\n}\n","export default function debounce(func, wait, immediate) {\n  let timeout\n\n  return (...args) => {\n    const later = () => {\n      timeout = null\n      if (!immediate) func.apply(this, args)\n    }\n\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func.apply(this, args)\n  }\n}\n"],"sourceRoot":""}