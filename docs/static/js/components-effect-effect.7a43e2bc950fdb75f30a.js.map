{"version":3,"sources":["webpack://sheetforge/./source/components/Effect/Effect.scss","webpack://sheetforge/./source/components/Effect/Effect.mdx","webpack://sheetforge/./source/components/Effect/Effect.js"],"names":["layoutProps","MDXContent","props","layout","components","types","Character","Effect","character","create","attributes","name","resources","current","maximum","spells","costs","amount","resource","description","effects","modifier","modifies","isActive","level","at","React","Component","observer","condition","value","targetId","available","isApplicable","handleChangeTarget","hash","id","model","display","getter"],"mappings":"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","file":"static/js/components-effect-effect.0679d2c2.js","sourcesContent":["// extracted by mini-css-extract-plugin","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport { types } from 'mobx-state-tree'\nimport Character from '@/models/Character'\nimport Effect from '@/components/Effect'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"effect-component\"}}>{`Effect Component`}</MDXTag>\n<Playground __position={0} __code={'() => {\\n  const character = Character.create({\\n    attributes: [{ name: \\'Armor Rating\\' }, { name: \\'Charisma\\' }],\\n    resources: [{ current: 16, name: \\'Mana\\', maximum: 25 }],\\n    spells: [\\n      {\\n        costs: [{ amount: 8, resource: \\'Mana\\' }],\\n        name: \\'Spell-Shield of the Magi\\',\\n        description:\\n          \\'A powerful shielding spell, which cloaks the enchanted in radiance.\\',\\n        effects: [\\n          { modifier: 4, modifies: \\'Armor Rating\\' },\\n          { modifier: 2, modifies: \\'Charisma\\' },\\n        ],\\n        isActive: true,\\n        level: 7,\\n      },\\n    ],\\n  })\\n  return <Effect model={character.spells.at(0).effects.at(0)} />\\n}'} __scope={{props: this ? this.props : props,types,Character,Effect}}>\n  {() => {\n    const character = Character.create({\n      attributes: [\n        { name: 'Armor Rating' },\n        { name: 'Charisma' },\n      ],\n      resources: [\n        { current: 16, name: 'Mana', maximum: 25 },\n      ],\n      spells: [{\n        costs: [\n          { amount: 8, resource: 'Mana' }\n        ],\n        name: 'Spell-Shield of the Magi',\n        description: 'A powerful shielding spell, which cloaks the enchanted in radiance.',\n        effects: [\n          { modifier: 4, modifies: 'Armor Rating' },\n          { modifier: 2, modifies: 'Charisma' },\n        ],\n        isActive: true,\n        level: 7,\n      }],\n    })\nreturn <Effect model={character.spells.at(0).effects.at(0)} />\n  }}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport './Effect.scss'\n\n@observer class Effect extends Component {\n  static defaultProps = {\n    model: {},\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => [!model.targetId, model.targetId],\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => [!model.condition, model.modifier],\n  }]\n\n  handleChangeCondition = condition => this.props.model.set({ condition })\n  handleChangeModifier = modifier => this.props.model.set({ modifier })\n  handleChangeTarget = ({ target: { value } }) => this.props.model.set({ targetId: value })\n\n  render() {\n    const { available, condition = '', isApplicable, modifier, targetId } = this.props.model\n\n    return (\n      <div className={`effect ${isApplicable ? 'applicable' : ''}`.trim()}>\n        <select className=\"target\" value={targetId} onChange={this.handleChangeTarget}>\n          {available().map(({ hash, id, name }) => (\n            <option key={hash} value={id}>{name}</option>\n          ))}\n        </select>\n        <Editable\n          className=\"modifier\"\n          max={999}\n          min={-99}\n          onChange={this.handleChangeModifier}\n          value={modifier}\n        />\n        <Editable\n          className=\"condition\"\n          onChange={this.handleChangeCondition}\n          placeholder=\"Any\"\n          value={condition}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Effect\n"],"sourceRoot":""}