{"version":3,"sources":["webpack://sheetforge/./source/models/Descriptor/Descriptor.js","webpack://sheetforge/./source/utilities/unique.js","webpack://sheetforge/./source/components/Editable/Editable.js","webpack://sheetforge/./source/utilities/splitObjectPath.js","webpack://sheetforge/./source/utilities/getPathValue.js","webpack://sheetforge/./source/models/generic/IEditable/IEditable.js","webpack://sheetforge/./source/utilities/setPathValue.js","webpack://sheetforge/./source/components/Descriptor/Descriptor.js","webpack://sheetforge/./source/components/Descriptor/Descriptor.mdx","webpack://sheetforge/./source/utilities/bound.js","webpack://sheetforge/./source/utilities/hash.js","webpack://sheetforge/./source/models/generic/IIdentity/IIdentity.js","webpack://sheetforge/./source/models/generic/ICategorizable/ICategorizable.js","webpack://sheetforge/./source/utilities/noop.js"],"names":["mobx_state_tree__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_models_generic_ICategorizable__WEBPACK_IMPORTED_MODULE_1__","_models_generic_IEditable__WEBPACK_IMPORTED_MODULE_2__","_models_generic_IIdentity__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","compose","ICategorizable","model","name","value","named","arguments","length","undefined","filter","item","index","all","TYPES","Editable","editing","resetValue","_this","props","type","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","includes","onChange","state","handleToggleEditing","editor","editorType","getEditorType","focus","forceEditMode","setSelectionRange","_ref","target","_this$props","min","max","parseFloat","Number","bound","event","key","ctrlKey","metaKey","onKeyDown","_utilities_noop__WEBPACK_IMPORTED_MODULE_11__","isDefaultPrevented","resetChanges","readOnly","setState","onEditStart","onEditEnd","select","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","checked","Boolean","disabled","toggleBoolean","ref","createRefWithAutoFocus","paragraphs","placeholder","split","map","line","className","join","trim","onClick","onBlur","handleChange","onFocus","selectOnFocus","handleKeys","onKeyPress","onKeyUp","rows","step","renderStatic","_this$props2","readOnlyValue","showPlaceholder","displayValue","renderBoolean","renderSlider","renderMultiline","renderNumber","renderText","_this$props3","classes","handleReceivingFocus","tabIndex","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","renderEditor","this","React","Component","PATH_SPLITTER","splitObjectPath","path","getPathValue","object","Array","property","pop","reduce","o","IEditable","mobx_state_tree","volatile","isIEditable","savedVersion","views","self","isDirty","deepEqual","toJSON","actions","afterCreate","isPathDirty","current","initial","markAsClean","Object","isObservableArray","child","reset","set","setPathValue","typeof_default","Descriptor","observer","onDelete","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Editable__WEBPACK_IMPORTED_MODULE_9__","handleChangeName","handleCommitName","handleChangeValue","noop","display","getter","MDXContent","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","call","layout","components","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_6___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","id","docz__WEBPACK_IMPORTED_MODULE_8__","__position","__code","__scope","DescriptorModel","_components_Descriptor__WEBPACK_IMPORTED_MODULE_9__","create","randomHash","radix","string","String","h","char","Math","hash","toString","_utilities_noop__WEBPACK_IMPORTED_MODULE_1__","_utilities_unique__WEBPACK_IMPORTED_MODULE_2__","getValue","isICategorizable","getCategories","categories","unique","category","sort","lastUsedName","categoryValue"],"mappings":"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","file":"static/js/components-descriptor-descriptor.96894c58.js","sourcesContent":["import { types } from 'mobx-state-tree'\nimport ICategorizable from '@/models/generic/ICategorizable'\nimport IEditable from '@/models/generic/IEditable'\nimport IIdentity from '@/models/generic/IIdentity'\n\nexport default types.compose(\n  IIdentity,\n  ICategorizable(),\n  IEditable,\n  types.model({\n    name: 'New Descriptor...',\n    value: '',\n  })\n).named('Descriptor')\n","export default (array = []) => (\n  array.filter((item, index, all) => all.indexOf(item) === index)\n)\n","import React from 'react'\nimport bound from '@/utilities/bound'\nimport noop from '@/utilities/noop'\nimport './Editable.scss'\n\nconst TYPES = [\n  // Strings\n  'text', 'multiline',\n  // Checkboxes\n  'boolean',\n  // Numbers\n  'number', 'slider',\n]\n\nexport default class Editable extends React.Component {\n  static displayName = 'Editable'\n\n  static defaultProps = {\n    className: '',\n    forceEditMode: false,\n    max: undefined,\n    min: undefined,\n    onChange: noop,\n    onEditEnd: noop,\n    onEditStart: noop,\n    onKeyDown: noop,\n    onKeyPress: noop,\n    onKeyUp: noop,\n    placeholder: '',\n    readOnly: false,\n    readOnlyValue: undefined,\n    step: 1,\n    type: undefined,\n    value: '',\n  }\n\n  state = {\n    editing: false,\n    resetValue: this.props.value,\n  }\n\n  get editing() {\n    return this.props.forceEditMode || this.state.editing\n  }\n\n  getEditorType = () => {\n    const { value } = this.props\n    let { type } = this.props\n\n    if (type !== undefined && TYPES.includes(type)) { return type }\n\n    type = typeof value\n    if (type === 'string') { return value.includes('\\n') ? 'multiline' : 'text' }\n    if (['boolean', 'number'].includes(type)) { return type }\n\n    return 'text'\n  }\n\n  resetChanges = () => {\n    this.props.onChange(this.state.resetValue, this.props.value)\n    this.handleToggleEditing()\n  }\n\n  createRefWithAutoFocus = (editor) => {\n    if (!editor) { return }\n    this.editor = editor\n\n    const editorType = this.getEditorType()\n    if (editorType !== 'boolean' && typeof editor.focus === 'function') { editor.focus() }\n\n    if (['boolean', 'number'].includes(this.getEditorType())) { return }\n    if (this.props.forceEditMode && typeof editor.setSelectionRange === 'function') {\n      editor.setSelectionRange(editor.value.length, editor.value.length)\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { min, max } = this.props\n    let { value } = target\n\n    // eslint-disable-next-line default-case\n    switch (this.getEditorType()) {\n      case 'slider':\n      case 'number':\n        value = parseFloat(value || 0)\n        // eslint-disable-next-line prefer-destructuring\n        if (Number.isNaN(value)) { value = this.props.value }\n        value = bound(value, { max, min })\n    }\n    this.props.onChange(value, this.state.resetValue)\n  }\n\n  handleKeys = (event) => {\n    const { target, key, ctrlKey, metaKey } = event\n\n    if (this.props.onKeyDown !== noop) {\n      this.props.onKeyDown(event)\n      if (event.isDefaultPrevented()) return\n    }\n\n    if (key === 'Escape') { this.resetChanges() }\n    if (key === 'Enter') {\n      if (target.nodeName !== 'TEXTAREA' || ctrlKey || metaKey) {\n        this.handleToggleEditing()\n      }\n    }\n  }\n\n  handleReceivingFocus = () => {\n    if (this.props.readOnly) { return }\n    if (!this.state.editing) { this.handleToggleEditing() }\n  }\n\n  handleToggleEditing = () => {\n    if (this.props.readOnly) { return }\n\n    const editing = !this.editing\n\n    this.setState({ editing, resetValue: this.props.value }, () => {\n      if (this.state.editing) {\n        this.props.onEditStart()\n      } else {\n        this.props.onEditEnd()\n      }\n    })\n  }\n\n  selectOnFocus = event => event.target.select()\n\n  toggleBoolean = () => {\n    this.props.onEditStart()\n    this.props.onChange(!this.props.value, this.props.value)\n    this.props.onEditEnd()\n  }\n\n  renderBoolean = () => (\n    <input\n      type=\"checkbox\"\n      checked={Boolean(this.props.value)}\n      disabled={this.props.readOnly}\n      onChange={this.toggleBoolean}\n      ref={this.createRefWithAutoFocus}\n    />\n  )\n\n  renderMultiline = () => {\n    if (!this.editing) {\n      const lines = (this.props.value || this.props.placeholder).split('\\n')\n      const paragraphs = lines.map((line, index) => <p key={index}>{line}</p>\n      )\n      const className = ['multiline', this.props.value ? '' : 'placeholder'].join(' ').trim()\n      return <div className={className} onClick={this.handleToggleEditing}>{paragraphs}</div>\n    }\n\n    return (\n      <textarea\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        rows={this.props.value.split('\\n').length}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderNumber = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"number\"\n        disabled={this.props.readOnly}\n        max={this.props.max}\n        min={this.props.min}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        step={this.props.step}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderSlider = () => (\n    <input\n      type=\"range\"\n      disabled={this.props.readOnly}\n      max={this.props.max}\n      min={this.props.min}\n      onBlur={this.handleToggleEditing}\n      onChange={this.handleChange}\n      onKeyDown={this.props.onKeyDown}\n      onKeyPress={this.props.onKeyPress}\n      onKeyUp={this.props.onKeyUp}\n      ref={this.createRefWithAutoFocus}\n      step={this.props.step}\n      value={this.props.value}\n    />\n  )\n\n  renderText = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"text\"\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderStatic = () => {\n    const { placeholder, readOnlyValue, value } = this.props\n    const showPlaceholder = placeholder && !value\n    const displayValue = readOnlyValue !== undefined ? readOnlyValue : value\n    const className = showPlaceholder ? 'placeholder' : ''\n    return (\n      <span className={className} onClick={this.handleToggleEditing}>\n        {showPlaceholder ? placeholder : displayValue}\n      </span>\n    )\n  }\n\n  renderEditor = () => {\n    switch (this.getEditorType()) {\n      case 'boolean':\n        return this.renderBoolean()\n      case 'slider':\n        return this.renderSlider()\n      case 'multiline':\n        return this.renderMultiline()\n      case 'number':\n        return this.renderNumber()\n      default:\n        return this.renderText()\n    }\n  }\n\n  render = () => {\n    const { className, readOnly } = this.props\n\n    const classes = [\n      'editable',\n      this.editing ? 'editing' : '',\n      className || '',\n      readOnly ? 'readonly' : '',\n    ].filter(Boolean)\n\n    let props = {}\n    if (!readOnly && !this.editing) {\n      props = { onFocus: this.handleReceivingFocus, tabIndex: '0' }\n    }\n\n    return (\n      <div className={classes.join(' ')} {...props}>\n        {this.renderEditor()}\n      </div>\n    )\n  }\n}\n","const PATH_SPLITTER = /([a-z0-9-_]+)(?![[\"'\\].])*/ig\n\nexport default (path) => {\n  if (typeof path !== 'string') return null\n  return path.match(PATH_SPLITTER)\n}\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path) => {\n  if (typeof path !== 'string') return undefined\n\n  const split = splitObjectPath(path)\n\n  if (!Array.isArray(split)) return undefined\n\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target) return target[property]\n  return undefined\n}\n","import deepEqual from 'deep-equal'\nimport { isObservableArray } from 'mobx'\nimport { types } from 'mobx-state-tree'\nimport getPathValue from '@/utilities/getPathValue'\nimport setPathValue from '@/utilities/setPathValue'\n\nconst IEditable = types.model('IEditable', {\n  // Any\n}).volatile(() => ({\n  isIEditable: true,\n  savedVersion: {},\n})).views(self => ({\n  get isDirty() { return !deepEqual(self.toJSON(), self.savedVersion) },\n})).actions(self => ({\n  /* eslint-disable no-param-reassign */\n\n  afterCreate() { self.savedVersion = self.toJSON() },\n  isPathDirty: (path) => {\n    const current = getPathValue(self.toJSON(), path)\n    const initial = getPathValue(self.savedVersion, path)\n    return !deepEqual(current, initial)\n  },\n  markAsClean() {\n    self.savedVersion = self.toJSON()\n\n    Object.keys(self.savedVersion).forEach((key) => {\n      const value = self[key]\n      if (!value) { return }\n\n      if (value.isIEditable) {\n        value.markAsClean()\n      } else if (isObservableArray(value)) {\n        value.forEach(child => (child && child.isIEditable && child.markAsClean()))\n      }\n    })\n  },\n  reset() { Object.assign(self, self.savedVersion) },\n  set(key = {}, value = undefined) {\n    if (typeof key === 'string' && value !== undefined) {\n      // allows: model.set('foo.bar', 'bar')\n      if (self[key] !== undefined) {\n        self[key] = value\n      } else {\n        setPathValue(self, key, value)\n      }\n    } else if (typeof key === 'object' && value === undefined) {\n      // allows: model.set({ foo: 'Foo', bar: 'Bar' })\n      Object.assign(self, key)\n    }\n  },\n\n  /* eslint-enable no-param-reassign */\n}))\n\nexport default IEditable\n","import splitObjectPath from '@/utilities/splitObjectPath'\n\nexport default (object, path, value) => {\n  const split = splitObjectPath(path)\n  const property = split.pop()\n  const target = split.reduce((o, key) => o[key] || {}, object)\n\n  if (target && target.isIEditable) {\n    target.set(property, value)\n  } else {\n    target[property] = value\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { Component } from 'react'\nimport Editable from '@/components/Editable'\nimport noop from '@/utilities/noop'\nimport './Descriptor.scss'\n\n@observer class Descriptor extends Component {\n  static defaultProps = {\n    model: {},\n    onDelete: noop,\n  }\n\n  static sortOptions = [{\n    display: 'icon-sort-name-asc',\n    getter: model => model.name,\n  }, {\n    display: 'icon-sort-value-asc',\n    getter: model => model.value,\n  }]\n\n  handleChangeName = name => this.props.model.set({ name })\n  handleChangeValue = value => this.props.model.set({ value })\n  handleCommitName = () => (this.props.model.name === '' && this.props.onDelete(this.props.model))\n\n  render() {\n    return (\n      <div className=\"descriptor\">\n        <Editable\n          className=\"name\"\n          onChange={this.handleChangeName}\n          onEditEnd={this.handleCommitName}\n          value={this.props.model.name}\n        />\n        <Editable\n          className=\"value\"\n          type=\"text\"\n          onChange={this.handleChangeValue}\n          value={this.props.model.value}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Descriptor\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport Descriptor from '@/components/Descriptor'\nimport DescriptorModel from '@/models/Descriptor'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"descriptor\"}}>{`Descriptor`}</MDXTag>\n<Playground __position={0} __code={'<Descriptor\\n  model={DescriptorModel.create({\\n    name: \\'Hair Color\\',\\n    value: \\'Brown\\',\\n  })}\\n/>'} __scope={{props: this ? this.props : props,Descriptor,DescriptorModel}}>\n  <Descriptor model={DescriptorModel.create({\n    name: 'Hair Color',\n    value: 'Brown',\n  })} />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","export default (value, { min, max }) => {\n  if (min !== undefined && value < min) return min\n  if (max !== undefined && value > max) return max\n  return value\n}\n","export default function hash(value = '', radix = 16) {\n  const string = String(value)\n  let h = 0\n  string.split('').forEach((char) => {\n    /* eslint-disable no-bitwise */\n    h = ((h << 5) - h) + char.charCodeAt(0)\n    h &= h // Convert to 32-bit integer\n    /* eslint-enable no-bitwise */\n  })\n  return Math.abs(h).toString(radix)\n}\n\nexport const randomHash = () => hash(Math.random().toString())\n","import { types } from 'mobx-state-tree'\nimport { randomHash } from '@/utilities/hash'\n\nexport default types.model({\n  // Nothing\n}).volatile(() => ({\n  hash: '',\n})).actions(self => ({\n  afterCreate() { self.hash = randomHash() }, // eslint-disable-line no-param-reassign\n}))\n","import { types } from 'mobx-state-tree'\nimport noop from '@/utilities/noop'\nimport unique from '@/utilities/unique'\n\nexport default (getValue = noop) => types.model({\n}).volatile(() => ({\n  isICategorizable: true,\n})).views((self) => {\n  function getCategories() {\n    if (!self.name) return []\n\n    const categories = self.name.split(':')\n    categories.pop() // remove the name\n\n    return unique(categories.map(category => category.trim()).filter(Boolean)).sort()\n  }\n  let lastUsedName = self.name\n  let categories = getCategories()\n\n  return {\n    get categories() {\n      if (!self.name || self.name === lastUsedName) return categories\n\n      lastUsedName = self.name\n      categories = getCategories()\n\n      return categories\n    },\n    get categoryValue() { return getValue(self) },\n  }\n})\n","export default () => {}\n"],"sourceRoot":""}