{"version":3,"sources":["webpack://sheetforge/./source/components/Editable/Editable.mdx","webpack://sheetforge/./source/components/Editable/Editable.js","webpack://sheetforge/./source/components/Editable/Editable.scss","webpack://sheetforge/./source/utilities/bound.js","webpack://sheetforge/./source/utilities/noop.js"],"names":["layoutProps","MDXContent","props","layout","components","Editable","React","Component","TYPES","editing","resetValue","value","type","editorType","editor","target","min","max","parseFloat","Number","bound","event","key","ctrlKey","metaKey","Boolean","createRefWithAutoFocus","lines","paragraphs","index","className","handleToggleEditing","placeholder","readOnlyValue","showPlaceholder","displayValue","readOnly","classes","onFocus","tabIndex","forceEditMode","onChange","onEditEnd","onEditStart","onKeyDown","onKeyPress","onKeyUp","step"],"mappings":"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","file":"static/js/components-editable-editable.3428cde0.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport Editable from '@/components/Editable'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"editable-component\"}}>{`Editable Component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Editable`}</MDXTag>{` component is a generic editor for most data types.`}</MDXTag>\n<style>{`\n  .editable {\n    border: 1px solid #ddd;\n    padding: .25em;\n  }\n`}</style>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"boolean\"}}>{`Boolean`}</MDXTag>\n<Playground __position={1} __code={'<Editable value={true} />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value={true} />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"numeric\"}}>{`Numeric`}</MDXTag>\n<Playground __position={2} __code={'<Editable value={4} />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value={4} />\n</Playground>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"numeric-constrained-to-a-range\"}}>{`Numeric (constrained to a range)`}</MDXTag>\n<Playground __position={3} __code={'<Editable value={10} max={20} min={0} step={2} />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value={10} max={20} min={0} step={2} />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"range\"}}>{`Range`}</MDXTag>\n<Playground __position={4} __code={'<Editable value={50} max={100} type=\\\"slider\\\" />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value={50} max={100} type=\"slider\" />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"string\"}}>{`String`}</MDXTag>\n<Playground __position={5} __code={'<Editable value=\\\"Single Line String\\\" />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value=\"Single Line String\" />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"multi-line-string\"}}>{`Multi-Line String`}</MDXTag>\n<Playground __position={6} __code={'<Editable value=\\\"Multi-Line String\\\" type=\\\"multiline\\\" />'} __scope={{props: this ? this.props : props,Editable}}>\n  <Editable value=\"Multi-Line String\" type=\"multiline\" />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import React from 'react'\nimport bound from '@/utilities/bound'\nimport noop from '@/utilities/noop'\nimport './Editable.scss'\n\nconst TYPES = [\n  // Strings\n  'text', 'multiline',\n  // Checkboxes\n  'boolean',\n  // Numbers\n  'number', 'slider',\n]\n\nexport default class Editable extends React.Component {\n  static displayName = 'Editable'\n\n  static defaultProps = {\n    className: '',\n    forceEditMode: false,\n    max: undefined,\n    min: undefined,\n    onChange: noop,\n    onEditEnd: noop,\n    onEditStart: noop,\n    onKeyDown: noop,\n    onKeyPress: noop,\n    onKeyUp: noop,\n    placeholder: '',\n    readOnly: false,\n    readOnlyValue: undefined,\n    step: 1,\n    type: undefined,\n    value: '',\n  }\n\n  state = {\n    editing: false,\n    resetValue: this.props.value,\n  }\n\n  get editing() {\n    return this.props.forceEditMode || this.state.editing\n  }\n\n  getEditorType = () => {\n    const { value } = this.props\n    let { type } = this.props\n\n    if (type !== undefined && TYPES.includes(type)) { return type }\n\n    type = typeof value\n    if (type === 'string') { return value.includes('\\n') ? 'multiline' : 'text' }\n    if (['boolean', 'number'].includes(type)) { return type }\n\n    return 'text'\n  }\n\n  resetChanges = () => {\n    this.props.onChange(this.state.resetValue, this.props.value)\n    this.handleToggleEditing()\n  }\n\n  createRefWithAutoFocus = (editor) => {\n    if (!editor) { return }\n    this.editor = editor\n\n    const editorType = this.getEditorType()\n    if (editorType !== 'boolean' && typeof editor.focus === 'function') { editor.focus() }\n\n    if (['boolean', 'number'].includes(this.getEditorType())) { return }\n    if (this.props.forceEditMode && typeof editor.setSelectionRange === 'function') {\n      editor.setSelectionRange(editor.value.length, editor.value.length)\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { min, max } = this.props\n    let { value } = target\n\n    // eslint-disable-next-line default-case\n    switch (this.getEditorType()) {\n      case 'slider':\n      case 'number':\n        value = parseFloat(value || 0)\n        // eslint-disable-next-line prefer-destructuring\n        if (Number.isNaN(value)) { value = this.props.value }\n        value = bound(value, { max, min })\n    }\n    this.props.onChange(value, this.state.resetValue)\n  }\n\n  handleKeys = (event) => {\n    const { target, key, ctrlKey, metaKey } = event\n\n    if (this.props.onKeyDown !== noop) {\n      this.props.onKeyDown(event)\n      if (event.isDefaultPrevented()) return\n    }\n\n    if (key === 'Escape') { this.resetChanges() }\n    if (key === 'Enter') {\n      if (target.nodeName !== 'TEXTAREA' || ctrlKey || metaKey) {\n        this.handleToggleEditing()\n      }\n    }\n  }\n\n  handleReceivingFocus = () => {\n    if (this.props.readOnly) { return }\n    if (!this.state.editing) { this.handleToggleEditing() }\n  }\n\n  handleToggleEditing = () => {\n    if (this.props.readOnly) { return }\n\n    const editing = !this.editing\n\n    this.setState({ editing, resetValue: this.props.value }, () => {\n      if (this.state.editing) {\n        this.props.onEditStart()\n      } else {\n        this.props.onEditEnd()\n      }\n    })\n  }\n\n  selectOnFocus = event => event.target.select()\n\n  toggleBoolean = () => {\n    this.props.onEditStart()\n    this.props.onChange(!this.props.value, this.props.value)\n    this.props.onEditEnd()\n  }\n\n  renderBoolean = () => (\n    <input\n      type=\"checkbox\"\n      checked={Boolean(this.props.value)}\n      disabled={this.props.readOnly}\n      onChange={this.toggleBoolean}\n      ref={this.createRefWithAutoFocus}\n    />\n  )\n\n  renderMultiline = () => {\n    if (!this.editing) {\n      const lines = (this.props.value || this.props.placeholder).split('\\n')\n      const paragraphs = lines.map((line, index) => <p key={index}>{line}</p>\n      )\n      const className = ['multiline', this.props.value ? '' : 'placeholder'].join(' ').trim()\n      return <div className={className} onClick={this.handleToggleEditing}>{paragraphs}</div>\n    }\n\n    return (\n      <textarea\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        rows={this.props.value.split('\\n').length}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderNumber = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"number\"\n        disabled={this.props.readOnly}\n        max={this.props.max}\n        min={this.props.min}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        step={this.props.step}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderSlider = () => (\n    <input\n      type=\"range\"\n      disabled={this.props.readOnly}\n      max={this.props.max}\n      min={this.props.min}\n      onBlur={this.handleToggleEditing}\n      onChange={this.handleChange}\n      onKeyDown={this.props.onKeyDown}\n      onKeyPress={this.props.onKeyPress}\n      onKeyUp={this.props.onKeyUp}\n      ref={this.createRefWithAutoFocus}\n      step={this.props.step}\n      value={this.props.value}\n    />\n  )\n\n  renderText = () => {\n    if (!this.editing) { return this.renderStatic() }\n\n    return (\n      <input\n        type=\"text\"\n        disabled={this.props.readOnly}\n        onBlur={this.handleToggleEditing}\n        onChange={this.handleChange}\n        onFocus={this.selectOnFocus}\n        onKeyDown={this.handleKeys}\n        onKeyPress={this.props.onKeyPress}\n        onKeyUp={this.props.onKeyUp}\n        placeholder={this.props.placeholder}\n        ref={this.createRefWithAutoFocus}\n        value={this.props.value}\n      />\n    )\n  }\n\n  renderStatic = () => {\n    const { placeholder, readOnlyValue, value } = this.props\n    const showPlaceholder = placeholder && !value\n    const displayValue = readOnlyValue !== undefined ? readOnlyValue : value\n    const className = showPlaceholder ? 'placeholder' : ''\n    return (\n      <span className={className} onClick={this.handleToggleEditing}>\n        {showPlaceholder ? placeholder : displayValue}\n      </span>\n    )\n  }\n\n  renderEditor = () => {\n    switch (this.getEditorType()) {\n      case 'boolean':\n        return this.renderBoolean()\n      case 'slider':\n        return this.renderSlider()\n      case 'multiline':\n        return this.renderMultiline()\n      case 'number':\n        return this.renderNumber()\n      default:\n        return this.renderText()\n    }\n  }\n\n  render = () => {\n    const { className, readOnly } = this.props\n\n    const classes = [\n      'editable',\n      this.editing ? 'editing' : '',\n      className || '',\n      readOnly ? 'readonly' : '',\n    ].filter(Boolean)\n\n    let props = {}\n    if (!readOnly && !this.editing) {\n      props = { onFocus: this.handleReceivingFocus, tabIndex: '0' }\n    }\n\n    return (\n      <div className={classes.join(' ')} {...props}>\n        {this.renderEditor()}\n      </div>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin","export default (value, { min, max }) => {\n  if (min !== undefined && value < min) return min\n  if (max !== undefined && value > max) return max\n  return value\n}\n","export default () => {}\n"],"sourceRoot":""}